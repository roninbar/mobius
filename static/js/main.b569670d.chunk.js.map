{"version":3,"sources":["App.tsx","index.tsx"],"names":["glsl","String","raw","LIGHTDIR","BLACK","BLUE","GREEN","RED","GOLD","SILVER","WHITE","WHITE25","WHITE50","STRIP_COLORS","H","STEP","Math","PI","App","useState","theta","setTheta","anchor","setAnchor","mat4","create","modelMatrix","setModelMatrix","simpleProgramInfo","useRef","textureMappingProgramInfo","cubeMappingProgramInfo","canvas","useEffect","rawGl","current","getContext","Error","gl","Proxy","get","obj","key","rest","value","Reflect","apply","method","_this","args","console","log","name","join","loadAllTexturesAsync","a","promises","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","unit","activeTexture","texPiece","createTexture","bindTexture","TEXTURE_2D","push","loadTextureAsync","process","TEXTURE10","texPortrait","TEXTURE0","texEnv","axis","sign","TEXTURE_CUBE_MAP","slice","toLowerCase","Promise","all","vsSource","fsSource","program","buildProgram","attribs","position","getAttribLocation","normal","uniforms","matrices","projection","getUniformLocation","view","model","light","direction","ambientColor","diffuseColor","specularColor","specularity","color","makeSimpleProgram","simpleProgram","simpleUniforms","textureCoords","texture","sampler","makeTextureMappingProgram","texProgram","texUniforms","makeCubeMappingProgram","cubeProgram","cubeUniforms","useProgram","uniform3fv","uniform1f","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DEPTH_TEST","depthFunc","LEQUAL","clearDepth","clearColor","CULL_FACE","cullFace","BACK","then","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","afid","requestAnimationFrame","f","time","now","Date","getSeconds","getMinutes","getHours","cancelAnimationFrame","simpleAttribs","texAttribs","cubeAttribs","projectionMatrix","perspective","width","height","viewMatrix","fromTranslation","textureMatrix","mat3","uniformMatrix4fv","drawWithoutTexture","topology","positionBuffer","normalBuffer","colorBuffer","drawArrays","deleteBuffer","drawWithTexture","textureCoordBuffer","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","FRONT","scale","makeRim","m","translate","t","uniform4fv","uniformMatrix3fv","uniform1i","positions","colors","normals","first","v","x","cos","y","sin","mode","TRIANGLE_FAN","count","makeFloatBufferFromArray","makeDisc","i","makeStrip","drawHand","length","angle","rotateZ","TRIANGLE_STRIP","makeHand","r","h","norm","sqrt","nr","nh","makeHubcap","rotateX","makeFrisbee","vec3","fromValues","inverse","drawWithCubeMapping","className","ref","onPointerDown","currentTarget","pointerId","clientX","clientY","setPointerCapture","onPointerMove","dx","dy","distance","rot","fromRotation","mul","onPointerUp","releasePointerCapture","url","target","resolve","getParameter","ACTIVE_TEXTURE","texImage2D","RGBA","UNSIGNED_BYTE","image","Image","src","addEventListener","z","r0","r1","z0","z1","x0","x1","y0","y1","torsion","piece","s","tt","nTwists","ct","st","ctt","stt","r2","k","makeStripArrays","array","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","positionAttrib","normalAttrib","texCoordAttrib","texCoordBuffer","bindAttribute","FLOAT","unbindAttribute","attrib","size","type","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","createProgram","attachShader","buildShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","message","getProgramInfoLog","deleteProgram","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b569670d.chunk.js","sourcesContent":["/* eslint-disable one-var */\r\n/* eslint-disable no-bitwise */\r\n\r\nimport { mat3, mat4, vec3 } from 'gl-matrix';\r\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react';\r\nimport './App.scss';\r\n\r\ninterface ProgramInfo {\r\n  program: WebGLProgram;\r\n  attribs: {\r\n    position: number;\r\n    normal: number;\r\n  };\r\n  uniforms: {\r\n    matrices: {\r\n      projection: WebGLUniformLocation;\r\n      view: WebGLUniformLocation;\r\n      model: WebGLUniformLocation;\r\n      normal: WebGLUniformLocation;\r\n    };\r\n    color: WebGLUniformLocation;\r\n    light: {\r\n      direction: WebGLUniformLocation;\r\n      ambientColor: WebGLUniformLocation;\r\n      diffuseColor: WebGLUniformLocation;\r\n      specularColor: WebGLUniformLocation;\r\n      specularity: WebGLUniformLocation;\r\n    };\r\n  };\r\n}\r\n\r\ntype SimpleProgramInfo = ProgramInfo & {\r\n  attribs: {\r\n  };\r\n  uniforms: {\r\n  };\r\n};\r\n\r\ntype TextureMappingProgramInfo = ProgramInfo & {\r\n  attribs: {\r\n    textureCoords: number;\r\n  };\r\n  uniforms: {\r\n    matrices: {\r\n      texture: WebGLUniformLocation;\r\n    };\r\n    sampler: WebGLSampler;\r\n  };\r\n};\r\n\r\ntype CubeMappingProgramInfo = ProgramInfo & {\r\n  uniforms: {\r\n    sampler: WebGLSampler;\r\n  };\r\n};\r\n\r\ntype Primitive = {\r\n  mode: number;\r\n  first: number;\r\n  count: number;\r\n};\r\n\r\ninterface Actor {\r\n  topology: Primitive[];\r\n  positionBuffer: WebGLBuffer;\r\n  normalBuffer: WebGLBuffer;\r\n  colorBuffer: WebGLBuffer;\r\n  textureCoordBuffer?: WebGLBuffer;\r\n}\r\n\r\nconst glsl = String.raw;\r\n\r\nconst LIGHTDIR = [0.85, 0.8, 0.75];\r\n\r\nconst BLACK = [0, 0, 0];\r\nconst BLUE = [0, 0, 1];\r\nconst GREEN = [0, 0.75, 0];\r\n// const YELLOW = [1, 1, 0];\r\nconst RED = [1, 0, 0];\r\nconst GOLD = [1.0, 0.8, 0.5];\r\nconst SILVER = [0.75, 0.75, 0.75];\r\n// const TITANIUM = [0.125, 0.125, 0.125];\r\nconst WHITE = [1, 1, 1];\r\nconst WHITE25 = [0.25, 0.25, 0.25];\r\nconst WHITE50 = [0.5, 0.5, 0.5];\r\n\r\nconst STRIP_COLORS = [WHITE50, WHITE50, WHITE50, WHITE50];\r\n\r\nconst R = 1.0, H = 0.1;\r\nconst STEP = Math.PI / 36;\r\nconst EPSILON = 0.001;\r\n\r\nexport default function App() {\r\n\r\n  const [theta, setTheta] = useState(0); // The angle of the hour hand, in radians.\r\n  const [anchor, setAnchor] = useState<{ x: number, y: number; } | null>();\r\n  const [modelMatrix, setModelMatrix] = useState(mat4.create());\r\n\r\n  const simpleProgramInfo: MutableRefObject<SimpleProgramInfo | null> = useRef(null);\r\n  const textureMappingProgramInfo: MutableRefObject<TextureMappingProgramInfo | null> = useRef(null);\r\n  const cubeMappingProgramInfo: MutableRefObject<CubeMappingProgramInfo | null> = useRef(null);\r\n\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n\r\n  // #region Initialize WebGL stuff and start the animation.\r\n  useEffect(function () {\r\n\r\n    const rawGl = canvas.current?.getContext('webgl');\r\n\r\n    if (!rawGl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    const gl = new Proxy(rawGl, {\r\n      get(obj, key, ...rest) {\r\n        const value = Reflect.get(obj, key, ...rest);\r\n        return typeof value === 'function'\r\n          ? new Proxy(value, {\r\n            apply(method, _this, args) {\r\n              console.log(`gl.${method.name}(${args.join(', ')})`);\r\n              return Reflect.apply(method, obj, args);\r\n            },\r\n          })\r\n          : value;\r\n      },\r\n    });\r\n\r\n    const loadAllTexturesAsync = async function () {\r\n      const promises: Promise<null>[] = [];\r\n\r\n      // Hours\r\n      for (const unit of [gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23]) {\r\n        gl.activeTexture(unit);\r\n        const texPiece = gl.createTexture();\r\n        if (!texPiece) {\r\n          throw new Error('Failed to create texture.');\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D, texPiece);\r\n        promises.push(loadTextureAsync(gl, `${process.env.PUBLIC_URL}/texture/hours${unit - gl.TEXTURE20}.bmp`));\r\n      }\r\n\r\n      // Portrait of Mobius\r\n      gl.activeTexture(gl.TEXTURE10);\r\n      const texPortrait = gl.createTexture();\r\n      if (!texPortrait) {\r\n        throw new Error('Failed to create texture.');\r\n      }\r\n      gl.bindTexture(gl.TEXTURE_2D, texPortrait);\r\n      promises.push(loadTextureAsync(gl, `${process.env.PUBLIC_URL}/texture/mobius.png`));\r\n\r\n      // Environment\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      const texEnv = gl.createTexture();\r\n      if (!texEnv) {\r\n        throw new Error('Failed to create texture.');\r\n      }\r\n      for (const axis of ['X', 'Y', 'Z']) {\r\n        for (const sign of ['NEGATIVE', 'POSITIVE']) {\r\n          gl.bindTexture(gl.TEXTURE_CUBE_MAP, texEnv);\r\n          promises.push(\r\n            loadTextureAsync(gl, `${process.env.PUBLIC_URL}/texture/env/${sign.slice(0, 3).toLowerCase()}-${axis.toLowerCase()}.jpg`, `TEXTURE_CUBE_MAP_${sign as 'POSITIVE' | 'NEGATIVE'}_${axis as 'X' | 'Y' | 'Z'}`),\r\n          );\r\n        }\r\n      }\r\n\r\n      return Promise.all(promises);\r\n    };\r\n\r\n    const { program: simpleProgram, uniforms: simpleUniforms } = simpleProgramInfo.current = makeSimpleProgram(gl);\r\n    const { program: texProgram, uniforms: texUniforms } = textureMappingProgramInfo.current = makeTextureMappingProgram(gl);\r\n    const { program: cubeProgram, uniforms: cubeUniforms } = cubeMappingProgramInfo.current = makeCubeMappingProgram(gl);\r\n\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniform3fv(simpleUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(simpleUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(simpleUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(simpleUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(simpleUniforms.light.specularity, 10);\r\n\r\n    gl.useProgram(texProgram);\r\n    gl.uniform3fv(texUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(texUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(texUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(texUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(texUniforms.light.specularity, 10);\r\n\r\n    gl.useProgram(cubeProgram);\r\n    gl.uniform3fv(cubeUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(cubeUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(cubeUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(cubeUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(cubeUniforms.light.specularity, 10);\r\n\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    gl.clearDepth(1);\r\n    gl.clearColor(0, 0, 0, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.cullFace(gl.BACK);\r\n\r\n    loadAllTexturesAsync().then(function () {\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n\r\n      for (const unit of [gl.TEXTURE10, gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23]) {\r\n        gl.activeTexture(unit);\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n      }\r\n    });\r\n\r\n    let afid = requestAnimationFrame(function f(time) {\r\n      // setTheta(time / 12000 * Math.PI);\r\n      const now = new Date();\r\n      setTheta(((now.getSeconds() / 60 + now.getMinutes()) / 60 + now.getHours()) / 6 * Math.PI);\r\n      afid = requestAnimationFrame(f);\r\n    });\r\n\r\n    return () => {\r\n      cancelAnimationFrame(afid);\r\n    };\r\n\r\n  }, []);\r\n  // #endregion\r\n\r\n  // #region Render one frame.\r\n  useEffect(function () {\r\n\r\n    const gl = canvas.current?.getContext('webgl');\r\n\r\n    if (!gl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    if (!simpleProgramInfo.current || !textureMappingProgramInfo.current || !cubeMappingProgramInfo.current) {\r\n      throw new Error('Missing shader program!');\r\n    }\r\n\r\n    const { program: simpleProgram, attribs: simpleAttribs, uniforms: simpleUniforms } = simpleProgramInfo.current;\r\n    const { program: texProgram, attribs: texAttribs, uniforms: texUniforms } = textureMappingProgramInfo.current;\r\n    const { program: cubeProgram, attribs: cubeAttribs, uniforms: cubeUniforms } = cubeMappingProgramInfo.current;\r\n\r\n    const projectionMatrix = mat4.perspective(mat4.create(), Math.PI / 5, gl.canvas.width / gl.canvas.height, 0.1, 100);\r\n    const viewMatrix = mat4.fromTranslation(mat4.create(), [0, 0, -4]);\r\n    const textureMatrix = mat3.create();\r\n\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.projection, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.view, false, viewMatrix);\r\n\r\n    gl.useProgram(texProgram);\r\n    gl.uniformMatrix4fv(texUniforms.matrices.projection, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(texUniforms.matrices.view, false, viewMatrix);\r\n\r\n    gl.useProgram(cubeProgram);\r\n    gl.uniformMatrix4fv(cubeUniforms.matrices.projection, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(cubeUniforms.matrices.view, false, viewMatrix);\r\n\r\n    const drawWithoutTexture = function ({ topology, positionBuffer, normalBuffer, colorBuffer }: Actor) {\r\n      try {\r\n        drawArrays(gl, topology, simpleAttribs.position, positionBuffer, simpleAttribs.normal, normalBuffer);\r\n      } finally {\r\n        if (colorBuffer) gl.deleteBuffer(colorBuffer);\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    const drawWithTexture = function ({ topology, positionBuffer, normalBuffer, colorBuffer, textureCoordBuffer }: Actor) {\r\n      try {\r\n        drawArrays(gl, topology, texAttribs.position, positionBuffer, texAttribs.normal, normalBuffer, texAttribs.textureCoords, textureCoordBuffer);\r\n      } finally {\r\n        if (textureCoordBuffer) gl.deleteBuffer(textureCoordBuffer);\r\n        if (colorBuffer) gl.deleteBuffer(colorBuffer);\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    const drawWithCubeMapping = function ({ topology, positionBuffer, normalBuffer }: Actor) {\r\n      try {\r\n        drawArrays(gl, topology, cubeAttribs.position, positionBuffer, cubeAttribs.normal, normalBuffer);\r\n      } finally {\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    gl.cullFace(gl.FRONT);\r\n\r\n    // #region Inside of Rim\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, mat4.scale(mat4.create(), modelMatrix, [1.2, 1.2, 1]));\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, mat4.scale(mat4.create(), modelMatrix, [1 / 1.2, 1 / 1.2, 1]));\r\n    drawWithoutTexture(makeRim(gl));\r\n    // #endregion\r\n\r\n    gl.cullFace(gl.BACK);\r\n\r\n    // #region Clock Face\r\n    {\r\n      const m = mat4.translate(mat4.create(), modelMatrix, [0, 0, -H]);\r\n      const t = mat3.scale(mat3.create(), mat3.translate(mat3.create(), textureMatrix, [0.5, 0.5]), [0.75, -0.75]);\r\n      gl.useProgram(texProgram);\r\n      gl.uniform4fv(texUniforms.color, [...WHITE, 1]);\r\n      gl.uniform3fv(texUniforms.light.direction, LIGHTDIR);\r\n      gl.uniform3fv(texUniforms.light.ambientColor, WHITE25);\r\n      gl.uniform3fv(texUniforms.light.diffuseColor, WHITE);\r\n      gl.uniform3fv(texUniforms.light.specularColor, BLACK);\r\n      gl.uniform1f(texUniforms.light.specularity, 10);\r\n      gl.uniformMatrix4fv(texUniforms.matrices.model, false, mat4.scale(mat4.create(), m, [1.199, 1.199, 1]));\r\n      gl.uniformMatrix4fv(texUniforms.matrices.normal, false, mat4.scale(mat4.create(), m, [1 / 1.2, 1 / 1.2, 1]));\r\n      gl.uniformMatrix3fv(texUniforms.matrices.texture, false, t);\r\n      gl.uniform1i(texUniforms.sampler, 10);\r\n      drawWithTexture(makeDisc(gl));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Hours Strip\r\n    gl.useProgram(texProgram);\r\n    gl.uniform3fv(texUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(texUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(texUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(texUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(texUniforms.light.specularity, 12);\r\n    gl.uniform4fv(texUniforms.color, [...GOLD, 1]);\r\n    gl.uniformMatrix4fv(texUniforms.matrices.model, false, modelMatrix);\r\n    gl.uniformMatrix3fv(texUniforms.matrices.texture, false, textureMatrix);\r\n    for (let i = 0; i < 4; i++) {\r\n      gl.uniform1i(texUniforms.sampler, 20 + i);\r\n      drawWithTexture(makeStrip(gl, theta, i));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Hands\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniform3fv(simpleUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(simpleUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(simpleUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(simpleUniforms.light.specularColor, BLACK);\r\n    const drawHand = function (height: number, width: number, length: number, angle: number) {\r\n      const m = mat4.rotateZ(mat4.create(), modelMatrix, -angle);\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, m);\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, m);\r\n      drawWithoutTexture(makeHand(gl, height, width, length));\r\n    };\r\n    gl.uniform1f(simpleUniforms.light.specularity, 1);\r\n    gl.uniform4fv(simpleUniforms.color, [...BLUE, 1]);\r\n    drawHand(0.01, 0.02, 0.6, theta); // Hours\r\n    gl.uniform4fv(simpleUniforms.color, [...GREEN, 1]);\r\n    drawHand(0.02, 0.02, 0.8, theta * 12); // Minutes\r\n    gl.uniform4fv(simpleUniforms.color, [...RED, 1]);\r\n    drawHand(0.03, 0.01, 0.85, theta * 12 * 60); // Seconds\r\n    // #endregion\r\n\r\n    // #region Hubcap\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, modelMatrix);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, modelMatrix);\r\n    gl.uniform3fv(simpleUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(simpleUniforms.light.specularity, 10);\r\n    gl.uniform4fv(simpleUniforms.color, [...RED, 1]);\r\n    drawWithoutTexture(makeHubcap(gl, 0.03));\r\n    // #endregion\r\n\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniform4fv(simpleUniforms.color, [...GOLD, 1]);\r\n    gl.uniform1f(simpleUniforms.light.specularity, 32);\r\n\r\n    // #region Back of Case\r\n    {\r\n      const m = mat4.rotateX(mat4.create(), mat4.translate(mat4.create(), modelMatrix, [0, 0, -H]), Math.PI);\r\n      gl.useProgram(simpleProgram);\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, mat4.scale(mat4.create(), m, [1.2, 1.2, 0.24]));\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, mat4.scale(mat4.create(), m, [1 / 1.2, 1 / 1.2, 1 / 0.24]));\r\n      drawWithoutTexture(makeFrisbee(gl));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Outside of Rim\r\n    {\r\n      const scale = vec3.fromValues(1.2, 1.2, 1);\r\n      gl.useProgram(simpleProgram);\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, mat4.scale(mat4.create(), modelMatrix, scale));\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, mat4.scale(mat4.create(), modelMatrix, vec3.inverse(vec3.create(), scale)));\r\n      drawWithoutTexture(makeRim(gl));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Front of Case (glass)\r\n    {\r\n      const m = mat4.translate(mat4.create(), modelMatrix, [0, 0, +H]);\r\n      const scale = vec3.fromValues(1.2, 1.2, 0.24);\r\n      gl.useProgram(cubeProgram);\r\n      gl.uniformMatrix4fv(cubeUniforms.matrices.model, false, mat4.scale(mat4.create(), m, scale));\r\n      gl.uniformMatrix4fv(cubeUniforms.matrices.normal, false, mat4.scale(mat4.create(), m, vec3.inverse(vec3.create(), scale)));\r\n      gl.uniform4fv(cubeUniforms.color, [...WHITE, 0.125]);\r\n      gl.uniform1f(cubeUniforms.light.specularity, 128);\r\n      gl.uniform1i(cubeUniforms.sampler, 0);\r\n      // const { topology, positionBuffer, normalBuffer } = makeFrisbee(gl);\r\n      // drawArrays(gl, topology, cubeAttribs.position, positionBuffer, cubeAttribs.normal, normalBuffer);\r\n      drawWithCubeMapping(makeFrisbee(gl));\r\n    }\r\n    // #endregion\r\n\r\n  }, [theta, modelMatrix]);\r\n  // #endregion\r\n\r\n  // #region Event Handlers \r\n  const onPointerDown = ({ currentTarget, pointerId, clientX: x, clientY: y }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    currentTarget.setPointerCapture(pointerId);\r\n    setAnchor({ x, y });\r\n  };\r\n\r\n  const onPointerUp = ({ currentTarget, pointerId }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    setAnchor(null);\r\n    currentTarget.releasePointerCapture(pointerId);\r\n  };\r\n\r\n  const onPointerMove = ({ clientX: x, clientY: y }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    if (anchor) {\r\n      const dx = x - anchor.x;\r\n      const dy = y - anchor.y;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n      if (distance > 0) {\r\n        const rot = mat4.fromRotation(mat4.create(), 0.01 * distance, [dy, dx, 0]);\r\n        setModelMatrix(mat4.mul(mat4.create(), rot, modelMatrix));\r\n        setAnchor({ x, y });\r\n      }\r\n    }\r\n  };\r\n  // #endregion\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <canvas\r\n          width=\"768px\"\r\n          height=\"768px\"\r\n          ref={canvas}\r\n          onPointerDown={onPointerDown}\r\n          onPointerMove={onPointerMove}\r\n          onPointerUp={onPointerUp}\r\n        />\r\n        <p>M&ouml;bius Clock</p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction loadTextureAsync(\r\n  gl: WebGLRenderingContext,\r\n  url: string,\r\n  target: 'TEXTURE_2D' | `TEXTURE_CUBE_MAP_${'POSITIVE' | 'NEGATIVE'}_${'X' | 'Y' | 'Z'}` = 'TEXTURE_2D'\r\n): Promise<null> {\r\n  return new Promise(function (resolve) {\r\n    const unit = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n    gl.texImage2D(gl[target], 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    const image = new Image();\r\n    image.src = url;\r\n    image.addEventListener('load', function () {\r\n      gl.activeTexture(unit);\r\n      gl.texImage2D(gl[target], 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n      return resolve(null);\r\n    });\r\n  });\r\n}\r\n\r\nfunction makeFrisbee(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [0, 0, R];\r\n  const normals = [0, 0, 1];\r\n  const colors = [...GOLD];\r\n\r\n  let first = 0, v = 1;\r\n\r\n  const r = R * Math.sin(STEP);\r\n  const z = R * Math.cos(STEP);\r\n\r\n  for (let f = -Math.PI; f < Math.PI + EPSILON; f += STEP, v++) {\r\n    const x = r * Math.cos(f), y = r * Math.sin(f);\r\n\r\n    positions.push(x, y, z);\r\n    normals.push(x, y, z);\r\n    colors.push(...GOLD);\r\n  }\r\n\r\n  topology.push({ mode: gl.TRIANGLE_FAN, first, count: v - first });\r\n  first = v;\r\n\r\n  for (let t = STEP; t < 0.5 * Math.PI - EPSILON; t += STEP) {\r\n    const r0 = R * Math.sin(t), r1 = R * Math.sin(t + STEP);\r\n    const z0 = R * Math.cos(t), z1 = R * Math.cos(t + STEP);\r\n\r\n    for (let f = -Math.PI; f < Math.PI + EPSILON; f += STEP, v += 2) {\r\n      const x0 = r0 * Math.cos(f), x1 = r1 * Math.cos(f);\r\n      const y0 = r0 * Math.sin(f), y1 = r1 * Math.sin(f);\r\n\r\n      positions.push(x0, y0, z0);\r\n      normals.push(x0, y0, z0);\r\n      colors.push(...GOLD);\r\n\r\n      positions.push(x1, y1, z1);\r\n      normals.push(x1, y1, z1);\r\n      colors.push(...GOLD);\r\n    }\r\n\r\n    topology.push({ mode: gl.TRIANGLE_STRIP, first, count: v - first });\r\n    first = v;\r\n  }\r\n\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeRim(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [];\r\n  const normals = [];\r\n  const colors = [];\r\n  for (let t = 0; t < 2 * Math.PI + EPSILON; t += STEP) {\r\n    positions.push(R * Math.cos(t), R * Math.sin(t), +H);\r\n    normals.push(Math.cos(t), Math.sin(t), 0);\r\n    colors.push(...GOLD);\r\n    positions.push(R * Math.cos(t), R * Math.sin(t), -H);\r\n    normals.push(Math.cos(t), Math.sin(t), 0);\r\n    colors.push(...GOLD);\r\n  }\r\n  topology.push({ mode: gl.TRIANGLE_STRIP, first: 0, count: positions.length / 3 });\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeDisc(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [0, 0, 0];\r\n  const colors = [...SILVER];\r\n  const normals = [0, 0, 1];\r\n  const textureCoords = [0, 0];\r\n\r\n  let first = 0, v = 1;\r\n  for (let t = 0; t < 2 * Math.PI + EPSILON; t += STEP, v++) {\r\n    const x = R * Math.cos(t);\r\n    const y = R * Math.sin(t);\r\n    positions.push(x, y, 0);\r\n    normals.push(0, 0, 1);\r\n    colors.push(...SILVER);\r\n    textureCoords.push(x / R, y / R);\r\n  }\r\n  topology.push({ mode: gl.TRIANGLE_FAN, first, count: v - first });\r\n  first = v;\r\n\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n    textureCoordBuffer: makeFloatBufferFromArray(gl, textureCoords),\r\n  };\r\n}\r\n\r\nfunction makeHubcap(gl: WebGLRenderingContext, height: number): Actor {\r\n  const r = 0.05;\r\n  const h = 0.01;\r\n  const norm = Math.sqrt(r * r + h * h);\r\n  const nr = r / norm;\r\n  const nh = h / norm;\r\n  const positions = [0, 0, height + h];\r\n  const normals = [0, 0, 1];\r\n  const colors = [...SILVER];\r\n  for (let t = 0; t < 2 * Math.PI; t += Math.PI / 30) {\r\n    positions.push(r * Math.cos(t), r * Math.sin(t), height);\r\n    normals.push(nh * Math.cos(t), nh * Math.sin(t), nr);\r\n    colors.push(...SILVER);\r\n  }\r\n  const count = positions.length / 3;\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_FAN, first: 0, count }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeHand(gl: WebGLRenderingContext, height: number, width: number, length: number): Actor {\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_STRIP, first: 0, count: 4 }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, [\r\n      -width, -0.2 * length, height,\r\n      +width, -0.2 * length, height,\r\n      -width, length, height,\r\n      +width, length, height,\r\n    ]),\r\n    normalBuffer: makeFloatBufferFromArray(gl, [\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n    ]),\r\n    colorBuffer: makeFloatBufferFromArray(gl, [\r\n      ...SILVER,\r\n      ...SILVER,\r\n      ...SILVER,\r\n      ...SILVER,\r\n    ]),\r\n  };\r\n}\r\n\r\nfunction makeStrip(gl: WebGLRenderingContext, torsion: number, piece: number): Actor {\r\n  const { positions, normals, colors, textureCoords } = makeStripArrays(torsion, piece);\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_STRIP, first: 0, count: positions.length / 3 }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n    textureCoordBuffer: makeFloatBufferFromArray(gl, textureCoords),\r\n  };\r\n}\r\n\r\nfunction makeStripArrays(theta: number, piece: number) {\r\n  const textureCoords: number[] = [];\r\n  const positions: number[] = [];\r\n  const normals: number[] = [];\r\n  const colors: number[] = [];\r\n  const nTwists = 3;\r\n  for (let s = 0.0; s < 1.001; s += 0.033333) {\r\n    const t = (piece + s) * Math.PI;\r\n    const tt = nTwists * 0.5 * (t - theta);\r\n    const ct = Math.cos(t), st = Math.sin(t);\r\n    const ctt = Math.cos(tt), stt = Math.sin(tt);\r\n    // Position\r\n    const r1 = R + H * Math.cos(tt);\r\n    const r2 = R - H * Math.cos(tt);\r\n    positions.push(r1 * Math.sin(t), r1 * Math.cos(t), -H * Math.sin(tt));\r\n    positions.push(r2 * Math.sin(t), r2 * Math.cos(t), +H * Math.sin(tt));\r\n    // Normal\r\n    normals.push(-st * stt, -ct * stt, ct * ct * ctt + ctt * st * st);\r\n    normals.push(-st * stt, -ct * stt, ct * ct * ctt + ctt * st * st);\r\n    // Color\r\n    const color = [0, 0, 0];\r\n    for (let k = 0; k < 3; k++) {\r\n      color[k] = (1 - s) * STRIP_COLORS[piece][k] + s * STRIP_COLORS[(piece + 1) % STRIP_COLORS.length][k];\r\n    }\r\n    colors.push(...color, ...color);\r\n    // Texture Coordinates\r\n    textureCoords.push(s, 0, s, 1);\r\n  }\r\n  return { positions, normals, colors, textureCoords };\r\n}\r\n\r\nfunction makeFloatBufferFromArray(gl: WebGLRenderingContext, array: number[]) {\r\n  const buffer = gl.createBuffer();\r\n  if (!buffer) {\r\n    throw new Error('Failed to create buffer.');\r\n  }\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(array), gl.STATIC_DRAW);\r\n  return buffer;\r\n}\r\n\r\nfunction drawArrays(\r\n  gl: WebGLRenderingContext,\r\n  topology: Primitive[],\r\n  positionAttrib: number,\r\n  positionBuffer: WebGLBuffer,\r\n  normalAttrib?: number,\r\n  normalBuffer?: WebGLBuffer,\r\n  texCoordAttrib?: number,\r\n  texCoordBuffer?: WebGLBuffer,\r\n) {\r\n  bindAttribute(gl, positionAttrib, positionBuffer, 3, gl.FLOAT);\r\n  if (normalBuffer && typeof normalAttrib === 'number') {\r\n    bindAttribute(gl, normalAttrib, normalBuffer, 3, gl.FLOAT);\r\n  }\r\n  if (texCoordBuffer && typeof texCoordAttrib === 'number') {\r\n    bindAttribute(gl, texCoordAttrib, texCoordBuffer, 2, gl.FLOAT);\r\n  }\r\n  try {\r\n    for (const { mode, first, count } of topology) {\r\n      gl.drawArrays(mode, first, count);\r\n    }\r\n  } finally {\r\n    if (texCoordBuffer && typeof texCoordAttrib === 'number') {\r\n      unbindAttribute(gl, texCoordAttrib);\r\n    }\r\n    if (normalBuffer && typeof normalAttrib === 'number') {\r\n      unbindAttribute(gl, normalAttrib);\r\n    }\r\n    unbindAttribute(gl, positionAttrib);\r\n  }\r\n}\r\n\r\nfunction bindAttribute(gl: WebGLRenderingContext, attrib: number, buffer: WebGLBuffer, size: number, type: number) {\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.vertexAttribPointer(attrib, size, type, false, 0, 0);\r\n  gl.enableVertexAttribArray(attrib);\r\n}\r\n\r\nfunction unbindAttribute(gl: WebGLRenderingContext, attrib: number) {\r\n  gl.disableVertexAttribArray(attrib);\r\n}\r\n\r\nfunction makeSimpleProgram(gl: WebGLRenderingContext): SimpleProgramInfo {\r\n  // Uniform Names\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_NORMAL_MATRIX = 'uNormalMatrix';\r\n  const U_LIGHT_DIRECTION = 'uLightDirection';\r\n  const U_AMBIENT_COLOR = 'uCa';\r\n  const U_DIFFUSE_COLOR = 'uCd';\r\n  const U_SPECULAR_COLOR = 'uCs';\r\n  const U_SPECULARITY = 'uSpecularity';\r\n  const U_COLOR = 'uColor';\r\n  // Attribute Names\r\n  const A_POSITION = 'aPosition';\r\n  const A_NORMAL = 'aNormal';\r\n  // Varying Names\r\n  const V_NORMAL = 'vNormal';\r\n\r\n  const vsSource = glsl`\r\n    // Uniforms\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat4 ${U_NORMAL_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    uniform lowp vec4 ${U_COLOR};\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec3 ${A_NORMAL};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      ${V_NORMAL} = normalize(${U_VIEW_MATRIX} * ${U_NORMAL_MATRIX} * vec4(${A_NORMAL}, 0)).xyz;\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n    }\r\n  `;\r\n\r\n  const fsSource = glsl`\r\n    // Uniforms\r\n    uniform highp vec3 ${U_LIGHT_DIRECTION};\r\n    uniform lowp vec3 ${U_AMBIENT_COLOR};\r\n    uniform lowp vec3 ${U_DIFFUSE_COLOR};\r\n    uniform lowp vec3 ${U_SPECULAR_COLOR};\r\n    uniform lowp float ${U_SPECULARITY};\r\n    uniform lowp vec4 ${U_COLOR};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      // Apply lighting\r\n      highp vec3 u = normalize(${U_LIGHT_DIRECTION});\r\n      highp vec3 v = 2.0 * dot(u, ${V_NORMAL}) * ${V_NORMAL} - u; // Reflection direction\r\n      lowp float Id = max(0.0, (gl_FrontFacing ? +1.0 : -1.0) * dot(u, ${V_NORMAL})); // Diffuse intensity\r\n      lowp float Is = v[2] < 0.0 ? 0.0 : pow(v[2], ${U_SPECULARITY}); // Specular intensity\r\n      gl_FragColor = ${U_COLOR} * vec4(${U_AMBIENT_COLOR} + Id * ${U_DIFFUSE_COLOR}, 1.0) + Is * vec4(${U_SPECULAR_COLOR}, 1.0);\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, vsSource, fsSource);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      normal: gl.getAttribLocation(program, A_NORMAL),\r\n    },\r\n    uniforms: {\r\n      matrices: {\r\n        projection: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n        view: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n        model: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n        normal: getUniformLocation(gl, program, U_NORMAL_MATRIX),\r\n      },\r\n      light: {\r\n        direction: getUniformLocation(gl, program, U_LIGHT_DIRECTION),\r\n        ambientColor: getUniformLocation(gl, program, U_AMBIENT_COLOR),\r\n        diffuseColor: getUniformLocation(gl, program, U_DIFFUSE_COLOR),\r\n        specularColor: getUniformLocation(gl, program, U_SPECULAR_COLOR),\r\n        specularity: getUniformLocation(gl, program, U_SPECULARITY),\r\n      },\r\n      color: getUniformLocation(gl, program, U_COLOR),\r\n    },\r\n  };\r\n}\r\n\r\nfunction makeTextureMappingProgram(gl: WebGLRenderingContext): TextureMappingProgramInfo {\r\n  // Uniform Names\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_NORMAL_MATRIX = 'uNormalMatrix';\r\n  const U_TEXTURE_MATRIX = 'uTextureMatrix';\r\n  const U_SAMPLER = 'uSampler';\r\n  const U_LIGHT_DIRECTION = 'uLightDirection';\r\n  const U_AMBIENT_COLOR = 'uCa';\r\n  const U_DIFFUSE_COLOR = 'uCd';\r\n  const U_SPECULAR_COLOR = 'uCs';\r\n  const U_SPECULARITY = 'uSpecularity';\r\n  const U_COLOR = 'uColor';\r\n  // Attribute Names\r\n  const A_POSITION = 'aPosition';\r\n  const A_NORMAL = 'aNormal';\r\n  const A_TEXTURE_COORDS = 'aTextureCoords';\r\n  // Varying Names\r\n  const V_NORMAL = 'vNormal';\r\n  const V_TEXTURE_COORDS = 'vTextureCoords';\r\n\r\n  const vsSource = glsl`\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec3 ${A_NORMAL};\r\n    attribute vec2 ${A_TEXTURE_COORDS};\r\n    // Uniforms\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat4 ${U_NORMAL_MATRIX};\r\n    uniform mat3 ${U_TEXTURE_MATRIX};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    varying highp vec3 ${V_TEXTURE_COORDS};\r\n    // Program\r\n    void main(void) {\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n      ${V_NORMAL} = normalize(${U_VIEW_MATRIX} * ${U_NORMAL_MATRIX} * vec4(${A_NORMAL}, 0)).xyz;\r\n      ${V_TEXTURE_COORDS} = ${U_TEXTURE_MATRIX} * vec3(${A_TEXTURE_COORDS}, 1);\r\n    }\r\n  `;\r\n\r\n  const fsSource = glsl`\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    varying highp vec3 ${V_TEXTURE_COORDS};\r\n    // Uniforms\r\n    uniform highp vec4 ${U_COLOR};\r\n    uniform highp vec3 ${U_LIGHT_DIRECTION};\r\n    uniform lowp vec3 ${U_AMBIENT_COLOR};\r\n    uniform lowp vec3 ${U_DIFFUSE_COLOR};\r\n    uniform lowp vec3 ${U_SPECULAR_COLOR};\r\n    uniform lowp float ${U_SPECULARITY};\r\n    uniform sampler2D ${U_SAMPLER};\r\n    // Program\r\n    void main(void) {\r\n      // Apply lighting\r\n      highp vec3 u = normalize(${U_LIGHT_DIRECTION}); // Light direction\r\n      highp vec3 v = 2.0 * dot(u, ${V_NORMAL}) * ${V_NORMAL} - u; // Reflection direction\r\n      lowp float Id = max(0.0, (gl_FrontFacing ? +1.0 : -1.0) * dot(u, ${V_NORMAL})); // Diffuse intensity\r\n      lowp float Is = v[2] < 0.0 ? 0.0 : pow(v[2], ${U_SPECULARITY}); // Specular intensity\r\n      gl_FragColor = ${U_COLOR} * texture2D(${U_SAMPLER}, ${V_TEXTURE_COORDS}.xy) * vec4(${U_AMBIENT_COLOR} + Id * ${U_DIFFUSE_COLOR}, 1.0) + Is * vec4(${U_SPECULAR_COLOR}, 1.0);\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, vsSource, fsSource);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      normal: gl.getAttribLocation(program, A_NORMAL),\r\n      textureCoords: gl.getAttribLocation(program, A_TEXTURE_COORDS),\r\n    },\r\n    uniforms: {\r\n      matrices: {\r\n        projection: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n        view: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n        model: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n        normal: getUniformLocation(gl, program, U_NORMAL_MATRIX),\r\n        texture: getUniformLocation(gl, program, U_TEXTURE_MATRIX),\r\n      },\r\n      light: {\r\n        direction: getUniformLocation(gl, program, U_LIGHT_DIRECTION),\r\n        ambientColor: getUniformLocation(gl, program, U_AMBIENT_COLOR),\r\n        diffuseColor: getUniformLocation(gl, program, U_DIFFUSE_COLOR),\r\n        specularColor: getUniformLocation(gl, program, U_SPECULAR_COLOR),\r\n        specularity: getUniformLocation(gl, program, U_SPECULARITY),\r\n      },\r\n      sampler: getUniformLocation(gl, program, U_SAMPLER),\r\n      color: getUniformLocation(gl, program, U_COLOR),\r\n    },\r\n  };\r\n}\r\n\r\nfunction makeCubeMappingProgram(gl: WebGLRenderingContext) {\r\n  // Uniform Names\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_NORMAL_MATRIX = 'uNormalMatrix';\r\n  const U_SAMPLER = 'uSampler';\r\n  const U_LIGHT_DIRECTION = 'uLightDirection';\r\n  const U_AMBIENT_COLOR = 'uCa';\r\n  const U_DIFFUSE_COLOR = 'uCd';\r\n  const U_SPECULAR_COLOR = 'uCs';\r\n  const U_SPECULARITY = 'uSpecularity';\r\n  const U_COLOR = 'uColor';\r\n  // Attribute Names\r\n  const A_POSITION = 'aPosition';\r\n  const A_NORMAL = 'aNormal';\r\n  // Varying Names\r\n  const V_NORMAL = 'vNormal';\r\n\r\n  const vsSource = glsl`\r\n    // Uniforms\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat4 ${U_NORMAL_MATRIX};\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec3 ${A_NORMAL};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      ${V_NORMAL} = normalize(${U_VIEW_MATRIX} * ${U_NORMAL_MATRIX} * vec4(${A_NORMAL}, 0)).xyz;\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n    }\r\n  `;\r\n\r\n  const fsSource = glsl`\r\n    // Uniforms\r\n    uniform highp vec4 ${U_COLOR};\r\n    uniform highp vec3 ${U_LIGHT_DIRECTION};\r\n    uniform lowp vec3 ${U_AMBIENT_COLOR};\r\n    uniform lowp vec3 ${U_DIFFUSE_COLOR};\r\n    uniform lowp vec3 ${U_SPECULAR_COLOR};\r\n    uniform lowp float ${U_SPECULARITY};\r\n    uniform samplerCube ${U_SAMPLER};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      highp vec3 n = normalize(${V_NORMAL});\r\n      // Apply lighting\r\n      highp vec3 u = normalize(${U_LIGHT_DIRECTION}); // Light direction\r\n      highp vec3 v = reflect(vec3(0, 0, -1), n); // Reflection direction\r\n      lowp float Id = max(0.0, (gl_FrontFacing ? +1.0 : -1.0) * dot(u, ${V_NORMAL})); // Diffuse intensity\r\n      lowp float Is = v[2] < 0.0 ? 0.0 : pow(v[2], ${U_SPECULARITY}); // Specular intensity\r\n      gl_FragColor = ${U_COLOR} * textureCube(${U_SAMPLER}, v) * vec4(${U_AMBIENT_COLOR} + Id * ${U_DIFFUSE_COLOR}, 1.0) + Is * vec4(${U_SPECULAR_COLOR}, 1.0);\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, vsSource, fsSource);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      normal: gl.getAttribLocation(program, A_NORMAL),\r\n    },\r\n    uniforms: {\r\n      matrices: {\r\n        projection: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n        view: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n        model: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n        normal: getUniformLocation(gl, program, U_NORMAL_MATRIX),\r\n      },\r\n      color: getUniformLocation(gl, program, U_COLOR),\r\n      light: {\r\n        direction: getUniformLocation(gl, program, U_LIGHT_DIRECTION),\r\n        ambientColor: getUniformLocation(gl, program, U_AMBIENT_COLOR),\r\n        diffuseColor: getUniformLocation(gl, program, U_DIFFUSE_COLOR),\r\n        specularColor: getUniformLocation(gl, program, U_SPECULAR_COLOR),\r\n        specularity: getUniformLocation(gl, program, U_SPECULARITY),\r\n      },\r\n      sampler: getUniformLocation(gl, program, U_SAMPLER),\r\n    },\r\n  };\r\n}\r\n\r\nfunction buildProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string) {\r\n  const program = gl.createProgram();\r\n\r\n  if (!program) {\r\n    throw new Error('Failed to create program.');\r\n  }\r\n\r\n  gl.attachShader(program, buildShader(gl, gl.VERTEX_SHADER, vsSource));\r\n  gl.attachShader(program, buildShader(gl, gl.FRAGMENT_SHADER, fsSource));\r\n  gl.linkProgram(program);\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    const message = `Unable to initialize the shader program: ${gl.getProgramInfoLog(program)}`;\r\n    gl.deleteProgram(program);\r\n    throw new Error(message);\r\n  }\r\n\r\n  return program;\r\n}\r\n\r\nfunction buildShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n  const shader = gl.createShader(type);\r\n  if (!shader) {\r\n    throw new Error('Failed to create shader.');\r\n  }\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    const message = `An error occurred compiling the shaders: ${gl.getShaderInfoLog(shader)}`;\r\n    gl.deleteShader(shader);\r\n    throw new Error(message);\r\n  }\r\n  return shader;\r\n}\r\n\r\nfunction getUniformLocation(gl: WebGLRenderingContext, program: WebGLProgram, name: string): WebGLUniformLocation {\r\n  return gl.getUniformLocation(program, name) || error(`No uniform named \"${name}\" was found.`);\r\n}\r\n\r\nfunction error<T>(message: string): T {\r\n  throw new Error(message);\r\n}\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.scss'\r\n\r\n// You need bootstrap? $ yarn add bootstrap\r\n// See: https://create-react-app.dev/docs/adding-bootstrap\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// Single-page application (SPA)\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want to Pre-render with react-snap\r\n// Step 1: install $ yarn add --dev react-snap\r\n// Step 2: add to package.json run script: \"postbuild\": \"react-snap\"\r\n// Step 3: Add to package.json: \"reactSnap\":{\"inlineCss\":true}\r\n// Step 3: replace to the script below.\r\n\r\n/*\r\nimport { hydrate, render } from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst rootElement = document.getElementById('root')\r\nif (rootElement && rootElement!.hasChildNodes()) {\r\n  hydrate(<AppRouter />, rootElement)\r\n\r\n  // Precache - set to 'register' once you Pre-render\r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: http://bit.ly/CRA-PWA\r\n  serviceWorker.register()\r\n} else {\r\n  render(<AppRouter />, rootElement)\r\n}\r\n*/\r\n"],"sourceRoot":""}