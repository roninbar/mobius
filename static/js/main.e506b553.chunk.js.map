{"version":3,"sources":["App.tsx","index.tsx"],"names":["glsl","String","raw","LIGHTDIR","BLACK","BLUE","GREEN","RED","GOLD","SILVER","WHITE","WHITE25","WHITE50","STRIP_COLORS","H","STEP","Math","PI","App","useState","theta","setTheta","anchor","setAnchor","mat4","create","modelMatrix","setModelMatrix","programWithTextureMapping","useRef","programWithoutTextureMapping","canvas","useEffect","gl","current","getContext","Error","vsSource","fsSource","program","buildProgram","attribs","position","getAttribLocation","normal","textureCoords","uniforms","matrices","projection","getUniformLocation","view","model","texture","light","direction","ambientColor","diffuseColor","specularColor","specularity","sampler","color","makeProgramWithTextureMapping","makeProgramWithoutTextureMapping","texProgram","texUniforms","nonTexProgram","nonTexUniforms","useProgram","uniform3fv","uniform1f","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","which","loadTexture","process","TEXTURE10","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DEPTH_TEST","depthFunc","LEQUAL","clearDepth","clearColor","CULL_FACE","cullFace","BACK","afid","requestAnimationFrame","f","time","now","Date","getSeconds","getMinutes","getHours","cancelAnimationFrame","texAttribs","nonTexAttribs","projectionMatrix","perspective","width","height","viewMatrix","fromTranslation","textureMatrix","mat3","uniformMatrix4fv","drawWithoutTexture","topology","positionBuffer","normalBuffer","colorBuffer","drawArrays","deleteBuffer","drawWithTexture","textureCoordBuffer","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","FRONT","scale","makeRim","m","translate","t","uniform4fv","uniformMatrix3fv","uniform1i","positions","colors","normals","first","v","x","cos","y","sin","push","mode","TRIANGLE_FAN","count","makeFloatBufferFromArray","makeDisc","i","makeStrip","drawHand","length","angle","rotateZ","TRIANGLE_STRIP","makeHand","r","h","norm","sqrt","nr","nh","makeHubcap","rotateX","makeFrisbee","className","ref","onPointerDown","currentTarget","pointerId","clientX","clientY","setPointerCapture","onPointerMove","dx","dy","distance","rot","fromRotation","mul","onPointerUp","releasePointerCapture","url","createTexture","activeTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","isPowerOf2","generateMipmap","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","src","value","z","r0","r1","z0","z1","x0","x1","y0","y1","torsion","piece","s","tt","nTwists","ct","st","ctt","stt","r2","k","makeStripArrays","array","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","positionAttrib","normalAttrib","texCoordAttrib","texCoordBuffer","bindAttribute","FLOAT","unbindAttribute","attrib","size","type","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","createProgram","attachShader","buildShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","message","getProgramInfoLog","deleteProgram","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","name","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e506b553.chunk.js","sourcesContent":["/* eslint-disable one-var */\r\n/* eslint-disable no-bitwise */\r\n\r\nimport { mat3, mat4 } from 'gl-matrix';\r\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react';\r\nimport './App.scss';\r\n\r\ninterface ProgramInfo {\r\n  program: WebGLProgram;\r\n  attribs: {\r\n    position: number;\r\n    normal: number;\r\n  };\r\n  uniforms: {\r\n    matrices: {\r\n      projection: WebGLUniformLocation;\r\n      view: WebGLUniformLocation;\r\n      model: WebGLUniformLocation;\r\n      normal: WebGLUniformLocation;\r\n    },\r\n    light: {\r\n      direction: WebGLUniformLocation;\r\n      ambientColor: WebGLUniformLocation;\r\n      diffuseColor: WebGLUniformLocation;\r\n      specularColor: WebGLUniformLocation;\r\n      specularity: WebGLUniformLocation;\r\n    },\r\n    color: WebGLUniformLocation;\r\n  };\r\n}\r\n\r\ntype NonTextureMappingProgramInfo = ProgramInfo & {\r\n  attribs: {\r\n  };\r\n  uniforms: {\r\n  };\r\n};\r\n\r\ntype TextureMappingProgramInfo = ProgramInfo & {\r\n  attribs: {\r\n    textureCoords: number;\r\n  };\r\n  uniforms: {\r\n    matrices: {\r\n      texture: WebGLUniformLocation;\r\n    };\r\n    sampler: WebGLSampler;\r\n  };\r\n};\r\n\r\ntype Primitive = {\r\n  mode: number;\r\n  first: number;\r\n  count: number;\r\n};\r\n\r\ninterface Actor {\r\n  topology: Primitive[];\r\n  positionBuffer: WebGLBuffer;\r\n  normalBuffer: WebGLBuffer;\r\n  colorBuffer: WebGLBuffer;\r\n  textureCoordBuffer?: WebGLBuffer;\r\n}\r\n\r\nconst glsl = String.raw;\r\n\r\nconst LIGHTDIR = [0.85, 0.8, 0.75];\r\n\r\nconst BLACK = [0, 0, 0];\r\nconst BLUE = [0, 0, 1];\r\nconst GREEN = [0, 0.75, 0];\r\n// const YELLOW = [1, 1, 0];\r\nconst RED = [1, 0, 0];\r\nconst GOLD = [1.0, 0.8, 0.5];\r\nconst SILVER = [0.75, 0.75, 0.75];\r\n// const TITANIUM = [0.125, 0.125, 0.125];\r\nconst WHITE = [1, 1, 1];\r\nconst WHITE25 = [0.25, 0.25, 0.25];\r\nconst WHITE50 = [0.5, 0.5, 0.5];\r\n\r\nconst STRIP_COLORS = [WHITE50, WHITE50, WHITE50, WHITE50];\r\n\r\nconst R = 1.0, H = 0.1;\r\nconst STEP = Math.PI / 36;\r\nconst EPSILON = 0.001;\r\n\r\nexport default function App() {\r\n\r\n  const [theta, setTheta] = useState(0); // The angle of the hour hand, in radians.\r\n  const [anchor, setAnchor] = useState<{ x: number, y: number; } | null>();\r\n  const [modelMatrix, setModelMatrix] = useState(mat4.create());\r\n\r\n  const programWithTextureMapping: MutableRefObject<TextureMappingProgramInfo | null> = useRef(null);\r\n  const programWithoutTextureMapping: MutableRefObject<NonTextureMappingProgramInfo | null> = useRef(null);\r\n\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n\r\n  // #region Initialize WebGL stuff and start the animation.\r\n  useEffect(() => {\r\n\r\n    const gl = canvas.current?.getContext('webgl');\r\n\r\n    if (!gl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    programWithTextureMapping.current = makeProgramWithTextureMapping(gl);\r\n    programWithoutTextureMapping.current = makeProgramWithoutTextureMapping(gl);\r\n\r\n    const { program: texProgram, uniforms: texUniforms } = programWithTextureMapping.current;\r\n    const { program: nonTexProgram, uniforms: nonTexUniforms } = programWithoutTextureMapping.current;\r\n\r\n    gl.useProgram(texProgram);\r\n    gl.uniform3fv(texUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(texUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(texUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(texUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(texUniforms.light.specularity, 10);\r\n\r\n    gl.useProgram(nonTexProgram);\r\n    gl.uniform3fv(nonTexUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(nonTexUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(nonTexUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(nonTexUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(nonTexUniforms.light.specularity, 10);\r\n\r\n    for (const which of [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3]) {\r\n      loadTexture(gl, which, `${process.env.PUBLIC_URL}/texture/hours${which - gl.TEXTURE0}.bmp`);\r\n    }\r\n\r\n    loadTexture(gl, gl.TEXTURE10, `${process.env.PUBLIC_URL}/texture/mobius.png`);\r\n\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    gl.clearDepth(1);\r\n    gl.clearColor(0, 0, 0, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.cullFace(gl.BACK);\r\n\r\n    let afid = requestAnimationFrame(function f(time) {\r\n      // setTheta(time / 12000 * Math.PI);\r\n      const now = new Date();\r\n      setTheta(((now.getSeconds() / 60 + now.getMinutes()) / 60 + now.getHours()) / 6 * Math.PI);\r\n      afid = requestAnimationFrame(f);\r\n    });\r\n\r\n    return () => {\r\n      cancelAnimationFrame(afid);\r\n    };\r\n\r\n  }, []);\r\n  // #endregion\r\n\r\n  // #region Render one frame.\r\n  useEffect(() => {\r\n\r\n    const gl = canvas.current?.getContext('webgl');\r\n\r\n    if (!gl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    if (!programWithTextureMapping.current || !programWithoutTextureMapping.current) {\r\n      throw new Error('Missing shader program!');\r\n    }\r\n\r\n    const { program: texProgram, attribs: texAttribs, uniforms: texUniforms } = programWithTextureMapping.current;\r\n    const { program: nonTexProgram, attribs: nonTexAttribs, uniforms: nonTexUniforms } = programWithoutTextureMapping.current;\r\n\r\n    const projectionMatrix = mat4.perspective(mat4.create(), Math.PI / 5, gl.canvas.width / gl.canvas.height, 0.1, 100);\r\n    const viewMatrix = mat4.fromTranslation(mat4.create(), [0, 0, -4]);\r\n    const textureMatrix = mat3.create();\r\n\r\n    gl.useProgram(texProgram);\r\n    gl.uniformMatrix4fv(texUniforms.matrices.projection, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(texUniforms.matrices.view, false, viewMatrix);\r\n\r\n    gl.useProgram(nonTexProgram);\r\n    gl.uniformMatrix4fv(nonTexUniforms.matrices.projection, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(nonTexUniforms.matrices.view, false, viewMatrix);\r\n\r\n    const drawWithoutTexture = function ({ topology, positionBuffer, normalBuffer, colorBuffer }: Actor) {\r\n      try {\r\n        drawArrays(gl, topology, nonTexAttribs.position, positionBuffer, nonTexAttribs.normal, normalBuffer);\r\n      } finally {\r\n        if (colorBuffer) gl.deleteBuffer(colorBuffer);\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    const drawWithTexture = function ({ topology, positionBuffer, normalBuffer, colorBuffer, textureCoordBuffer }: Actor) {\r\n      try {\r\n        drawArrays(gl, topology, texAttribs.position, positionBuffer, texAttribs.normal, normalBuffer, texAttribs.textureCoords, textureCoordBuffer);\r\n      } finally {\r\n        if (textureCoordBuffer) gl.deleteBuffer(textureCoordBuffer);\r\n        if (colorBuffer) gl.deleteBuffer(colorBuffer);\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    gl.cullFace(gl.FRONT);\r\n\r\n    // #region Inside of Rim\r\n    gl.useProgram(nonTexProgram);\r\n    gl.uniformMatrix4fv(nonTexUniforms.matrices.model, false, mat4.scale(mat4.create(), modelMatrix, [1.2, 1.2, 1]));\r\n    gl.uniformMatrix4fv(nonTexUniforms.matrices.normal, false, mat4.scale(mat4.create(), modelMatrix, [1 / 1.2, 1 / 1.2, 1]));\r\n    drawWithoutTexture(makeRim(gl));\r\n    // #endregion\r\n\r\n    gl.cullFace(gl.BACK);\r\n\r\n    // #region Clock Face\r\n    {\r\n      const m = mat4.translate(mat4.create(), modelMatrix, [0, 0, -H]);\r\n      const t = mat3.scale(mat3.create(), mat3.translate(mat3.create(), textureMatrix, [0.5, 0.5]), [0.75, -0.75]);\r\n      gl.useProgram(texProgram);\r\n      gl.uniform4fv(texUniforms.color, [...WHITE, 1]);\r\n      gl.uniform3fv(texUniforms.light.direction, LIGHTDIR);\r\n      gl.uniform3fv(texUniforms.light.ambientColor, WHITE25);\r\n      gl.uniform3fv(texUniforms.light.diffuseColor, WHITE);\r\n      gl.uniform3fv(texUniforms.light.specularColor, BLACK);\r\n      gl.uniform1f(texUniforms.light.specularity, 10);\r\n      gl.uniformMatrix4fv(texUniforms.matrices.model, false, mat4.scale(mat4.create(), m, [1.199, 1.199, 1]));\r\n      gl.uniformMatrix4fv(texUniforms.matrices.normal, false, mat4.scale(mat4.create(), m, [1 / 1.2, 1 / 1.2, 1]));\r\n      gl.uniformMatrix3fv(texUniforms.matrices.texture, false, t);\r\n      gl.uniform1i(texUniforms.sampler, 10);\r\n      drawWithTexture(makeDisc(gl));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Hours Strip\r\n    gl.useProgram(texProgram);\r\n    gl.uniform3fv(texUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(texUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(texUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(texUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(texUniforms.light.specularity, 12);\r\n    gl.uniform4fv(texUniforms.color, [...GOLD, 1]);\r\n    gl.uniformMatrix4fv(texUniforms.matrices.model, false, modelMatrix);\r\n    gl.uniformMatrix3fv(texUniforms.matrices.texture, false, textureMatrix);\r\n    for (let i = 0; i < 4; i++) {\r\n      gl.uniform1i(texUniforms.sampler, i);\r\n      drawWithTexture(makeStrip(gl, theta, i));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Hands\r\n    gl.useProgram(nonTexProgram);\r\n    gl.uniform3fv(nonTexUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(nonTexUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(nonTexUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(nonTexUniforms.light.specularColor, BLACK);\r\n    const drawHand = function (height: number, width: number, length: number, angle: number) {\r\n      const m = mat4.rotateZ(mat4.create(), modelMatrix, -angle);\r\n      gl.uniformMatrix4fv(nonTexUniforms.matrices.model, false, m);\r\n      gl.uniformMatrix4fv(nonTexUniforms.matrices.normal, false, m);\r\n      drawWithoutTexture(makeHand(gl, height, width, length));\r\n    };\r\n    gl.uniform1f(nonTexUniforms.light.specularity, 1);\r\n    gl.uniform4fv(nonTexUniforms.color, [...BLUE, 1]);\r\n    drawHand(0.01, 0.02, 0.6, theta); // Hours\r\n    gl.uniform4fv(nonTexUniforms.color, [...GREEN, 1]);\r\n    drawHand(0.02, 0.02, 0.8, theta * 12); // Minutes\r\n    gl.uniform4fv(nonTexUniforms.color, [...RED, 1]);\r\n    drawHand(0.03, 0.01, 0.85, theta * 12 * 60); // Seconds\r\n    // #endregion\r\n\r\n    // #region Hubcap\r\n    gl.useProgram(nonTexProgram);\r\n    gl.uniformMatrix4fv(nonTexUniforms.matrices.model, false, modelMatrix);\r\n    gl.uniformMatrix4fv(nonTexUniforms.matrices.normal, false, modelMatrix);\r\n    gl.uniform3fv(nonTexUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(nonTexUniforms.light.specularity, 10);\r\n    gl.uniform4fv(nonTexUniforms.color, [...RED, 1]);\r\n    drawWithoutTexture(makeHubcap(gl, 0.03));\r\n    // #endregion\r\n    \r\n    gl.useProgram(nonTexProgram);\r\n    gl.uniform4fv(nonTexUniforms.color, [...GOLD, 1]);\r\n    gl.uniform1f(nonTexUniforms.light.specularity, 32);\r\n    \r\n    // #region Back of Case\r\n    {\r\n      const m = mat4.rotateX(mat4.create(), mat4.translate(mat4.create(), modelMatrix, [0, 0, -H]), Math.PI);\r\n      gl.useProgram(nonTexProgram);\r\n      gl.uniformMatrix4fv(nonTexUniforms.matrices.model, false, mat4.scale(mat4.create(), m, [1.2, 1.2, 0.24]));\r\n      gl.uniformMatrix4fv(nonTexUniforms.matrices.normal, false, mat4.scale(mat4.create(), m, [1 / 1.2, 1 / 1.2, 1 / 0.24]));\r\n      drawWithoutTexture(makeFrisbee(gl));\r\n    }\r\n    // #endregion\r\n    \r\n    // #region Outside of Rim\r\n    gl.useProgram(nonTexProgram);\r\n    gl.uniformMatrix4fv(nonTexUniforms.matrices.model, false, mat4.scale(mat4.create(), modelMatrix, [1.2, 1.2, 1]));\r\n    gl.uniformMatrix4fv(nonTexUniforms.matrices.normal, false, mat4.scale(mat4.create(), modelMatrix, [1 / 1.2, 1 / 1.2, 1]));\r\n    drawWithoutTexture(makeRim(gl));\r\n    // #endregion\r\n    \r\n    // #region Front of Case (glass)\r\n    {\r\n      const m = mat4.translate(mat4.create(), modelMatrix, [0, 0, +H]);\r\n      gl.useProgram(nonTexProgram);\r\n      gl.uniformMatrix4fv(nonTexUniforms.matrices.model, false, mat4.scale(mat4.create(), m, [1.2, 1.2, 0.24]));\r\n      gl.uniformMatrix4fv(nonTexUniforms.matrices.normal, false, mat4.scale(mat4.create(), m, [1 / 1.2, 1 / 1.2, 1 / 0.24]));\r\n      gl.uniform4fv(nonTexUniforms.color, [...WHITE, 0.125]);\r\n      gl.uniform1f(nonTexUniforms.light.specularity, 128);\r\n      drawWithoutTexture(makeFrisbee(gl));\r\n    }\r\n    // #endregion\r\n\r\n  }, [theta, modelMatrix]);\r\n  // #endregion\r\n\r\n  // #region Event Handlers \r\n  const onPointerDown = ({ currentTarget, pointerId, clientX: x, clientY: y }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    currentTarget.setPointerCapture(pointerId);\r\n    setAnchor({ x, y });\r\n  };\r\n\r\n  const onPointerUp = ({ currentTarget, pointerId }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    setAnchor(null);\r\n    currentTarget.releasePointerCapture(pointerId);\r\n  };\r\n\r\n  const onPointerMove = ({ clientX: x, clientY: y }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    if (anchor) {\r\n      const dx = x - anchor.x;\r\n      const dy = y - anchor.y;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n      if (distance > 0) {\r\n        const rot = mat4.fromRotation(mat4.create(), 0.01 * distance, [dy, dx, 0]);\r\n        setModelMatrix(mat4.mul(mat4.create(), rot, modelMatrix));\r\n        setAnchor({ x, y });\r\n      }\r\n    }\r\n  };\r\n  // #endregion\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <canvas\r\n          width=\"768px\"\r\n          height=\"768px\"\r\n          ref={canvas}\r\n          onPointerDown={onPointerDown}\r\n          onPointerMove={onPointerMove}\r\n          onPointerUp={onPointerUp}\r\n        />\r\n        <p>M&ouml;bius Clock</p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction loadTexture(gl: WebGLRenderingContext, which: number, url: string) {\r\n  const texture = gl.createTexture();\r\n\r\n  // Because images have to be downloaded over the internet\r\n  // they might take a moment until they are ready.\r\n  // Until then put a single pixel in the texture so we can\r\n  // use it immediately. When the image has finished downloading\r\n  // we'll update the texture with the contents of the image.\r\n  gl.activeTexture(which);\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    0, // level\r\n    gl.RGBA,\r\n    1, // width\r\n    1, // height\r\n    0, // border\r\n    gl.RGBA,\r\n    gl.UNSIGNED_BYTE,\r\n    new Uint8Array([255, 255, 255, 255]), // opaque white\r\n  );\r\n\r\n  const image = new Image();\r\n  image.onload = () => {\r\n    gl.activeTexture(which);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\r\n    // WebGL1 has different requirements for power of 2 images\r\n    // vs non power of 2 images so check if the image is a\r\n    // power of 2 in both dimensions.\r\n    if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\r\n      // Yes, it's a power of 2. Generate mips.\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n    } else {\r\n      // No, it's not a power of 2. Turn off mips and set\r\n      // wrapping to clamp to edge.\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n  };\r\n  image.src = url;\r\n\r\n  return texture;\r\n}\r\n\r\nfunction isPowerOf2(value: number) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\nfunction makeFrisbee(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [0, 0, R];\r\n  const normals = [0, 0, 1];\r\n  const colors = [...GOLD];\r\n\r\n  let first = 0, v = 1;\r\n\r\n  const r = R * Math.sin(STEP);\r\n  const z = R * Math.cos(STEP);\r\n\r\n  for (let f = -Math.PI; f < Math.PI + EPSILON; f += STEP, v++) {\r\n    const x = r * Math.cos(f), y = r * Math.sin(f);\r\n\r\n    positions.push(x, y, z);\r\n    normals.push(x, y, z);\r\n    colors.push(...GOLD);\r\n  }\r\n\r\n  topology.push({ mode: gl.TRIANGLE_FAN, first, count: v - first });\r\n  first = v;\r\n\r\n  for (let t = STEP; t < 0.5 * Math.PI - EPSILON; t += STEP) {\r\n    const r0 = R * Math.sin(t), r1 = R * Math.sin(t + STEP);\r\n    const z0 = R * Math.cos(t), z1 = R * Math.cos(t + STEP);\r\n\r\n    for (let f = -Math.PI; f < Math.PI + EPSILON; f += STEP, v += 2) {\r\n      const x0 = r0 * Math.cos(f), x1 = r1 * Math.cos(f);\r\n      const y0 = r0 * Math.sin(f), y1 = r1 * Math.sin(f);\r\n\r\n      positions.push(x0, y0, z0);\r\n      normals.push(x0, y0, z0);\r\n      colors.push(...GOLD);\r\n\r\n      positions.push(x1, y1, z1);\r\n      normals.push(x1, y1, z1);\r\n      colors.push(...GOLD);\r\n    }\r\n\r\n    topology.push({ mode: gl.TRIANGLE_STRIP, first, count: v - first });\r\n    first = v;\r\n  }\r\n\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeRim(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [];\r\n  const normals = [];\r\n  const colors = [];\r\n  for (let t = 0; t < 2 * Math.PI + EPSILON; t += STEP) {\r\n    positions.push(R * Math.cos(t), R * Math.sin(t), +H);\r\n    normals.push(Math.cos(t), Math.sin(t), 0);\r\n    colors.push(...GOLD);\r\n    positions.push(R * Math.cos(t), R * Math.sin(t), -H);\r\n    normals.push(Math.cos(t), Math.sin(t), 0);\r\n    colors.push(...GOLD);\r\n  }\r\n  topology.push({ mode: gl.TRIANGLE_STRIP, first: 0, count: positions.length / 3 });\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeDisc(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [0, 0, 0];\r\n  const colors = [...SILVER];\r\n  const normals = [0, 0, 1];\r\n  const textureCoords = [0, 0];\r\n\r\n  let first = 0, v = 1;\r\n  for (let t = 0; t < 2 * Math.PI + EPSILON; t += STEP, v++) {\r\n    const x = R * Math.cos(t);\r\n    const y = R * Math.sin(t);\r\n    positions.push(x, y, 0);\r\n    normals.push(0, 0, 1);\r\n    colors.push(...SILVER);\r\n    textureCoords.push(x / R, y / R);\r\n  }\r\n  topology.push({ mode: gl.TRIANGLE_FAN, first, count: v - first });\r\n  first = v;\r\n\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n    textureCoordBuffer: makeFloatBufferFromArray(gl, textureCoords),\r\n  };\r\n}\r\n\r\nfunction makeHubcap(gl: WebGLRenderingContext, height: number): Actor {\r\n  const r = 0.05;\r\n  const h = 0.01;\r\n  const norm = Math.sqrt(r * r + h * h);\r\n  const nr = r / norm;\r\n  const nh = h / norm;\r\n  const positions = [0, 0, height + h];\r\n  const normals = [0, 0, 1];\r\n  const colors = [...SILVER];\r\n  for (let t = 0; t < 2 * Math.PI; t += Math.PI / 30) {\r\n    positions.push(r * Math.cos(t), r * Math.sin(t), height);\r\n    normals.push(nh * Math.cos(t), nh * Math.sin(t), nr);\r\n    colors.push(...SILVER);\r\n  }\r\n  const count = positions.length / 3;\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_FAN, first: 0, count }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeHand(gl: WebGLRenderingContext, height: number, width: number, length: number): Actor {\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_STRIP, first: 0, count: 4 }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, [\r\n      -width, -0.2 * length, height,\r\n      +width, -0.2 * length, height,\r\n      -width, length, height,\r\n      +width, length, height,\r\n    ]),\r\n    normalBuffer: makeFloatBufferFromArray(gl, [\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n    ]),\r\n    colorBuffer: makeFloatBufferFromArray(gl, [\r\n      ...SILVER,\r\n      ...SILVER,\r\n      ...SILVER,\r\n      ...SILVER,\r\n    ]),\r\n  };\r\n}\r\n\r\nfunction makeStrip(gl: WebGLRenderingContext, torsion: number, piece: number): Actor {\r\n  const { positions, normals, colors, textureCoords } = makeStripArrays(torsion, piece);\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_STRIP, first: 0, count: positions.length / 3 }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n    textureCoordBuffer: makeFloatBufferFromArray(gl, textureCoords),\r\n  };\r\n}\r\n\r\nfunction makeStripArrays(theta: number, piece: number) {\r\n  const textureCoords: number[] = [];\r\n  const positions: number[] = [];\r\n  const normals: number[] = [];\r\n  const colors: number[] = [];\r\n  const nTwists = 3;\r\n  for (let s = 0.0; s < 1.001; s += 0.033333) {\r\n    const t = (piece + s) * Math.PI;\r\n    const tt = nTwists * 0.5 * (t - theta);\r\n    const ct = Math.cos(t), st = Math.sin(t);\r\n    const ctt = Math.cos(tt), stt = Math.sin(tt);\r\n    // Position\r\n    const r1 = R + H * Math.cos(tt);\r\n    const r2 = R - H * Math.cos(tt);\r\n    positions.push(r1 * Math.sin(t), r1 * Math.cos(t), -H * Math.sin(tt));\r\n    positions.push(r2 * Math.sin(t), r2 * Math.cos(t), +H * Math.sin(tt));\r\n    // Normal\r\n    normals.push(-st * stt, -ct * stt, ct * ct * ctt + ctt * st * st);\r\n    normals.push(-st * stt, -ct * stt, ct * ct * ctt + ctt * st * st);\r\n    // Color\r\n    const color = [0, 0, 0];\r\n    for (let k = 0; k < 3; k++) {\r\n      color[k] = (1 - s) * STRIP_COLORS[piece][k] + s * STRIP_COLORS[(piece + 1) % STRIP_COLORS.length][k];\r\n    }\r\n    colors.push(...color, ...color);\r\n    // Texture Coordinates\r\n    textureCoords.push(s, 0, s, 1);\r\n  }\r\n  return { positions, normals, colors, textureCoords };\r\n}\r\n\r\nfunction makeFloatBufferFromArray(gl: WebGLRenderingContext, array: number[]) {\r\n  const buffer = gl.createBuffer();\r\n  if (!buffer) {\r\n    throw new Error('Failed to create buffer.');\r\n  }\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(array), gl.STATIC_DRAW);\r\n  return buffer;\r\n}\r\n\r\nfunction drawArrays(\r\n  gl: WebGLRenderingContext,\r\n  topology: Primitive[],\r\n  positionAttrib: number,\r\n  positionBuffer: WebGLBuffer,\r\n  normalAttrib?: number,\r\n  normalBuffer?: WebGLBuffer,\r\n  texCoordAttrib?: number,\r\n  texCoordBuffer?: WebGLBuffer,\r\n) {\r\n  bindAttribute(gl, positionAttrib, positionBuffer, 3, gl.FLOAT);\r\n  if (normalBuffer && typeof normalAttrib === 'number') {\r\n    bindAttribute(gl, normalAttrib, normalBuffer, 3, gl.FLOAT);\r\n  }\r\n  if (texCoordBuffer && typeof texCoordAttrib === 'number') {\r\n    bindAttribute(gl, texCoordAttrib, texCoordBuffer, 2, gl.FLOAT);\r\n  }\r\n  try {\r\n    for (const { mode, first, count } of topology) {\r\n      gl.drawArrays(mode, first, count);\r\n    }\r\n  } finally {\r\n    if (texCoordBuffer && typeof texCoordAttrib === 'number') {\r\n      unbindAttribute(gl, texCoordAttrib);\r\n    }\r\n    if (normalBuffer && typeof normalAttrib === 'number') {\r\n      unbindAttribute(gl, normalAttrib);\r\n    }\r\n    unbindAttribute(gl, positionAttrib);\r\n  }\r\n}\r\n\r\nfunction bindAttribute(gl: WebGLRenderingContext, attrib: number, buffer: WebGLBuffer, size: number, type: number) {\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.vertexAttribPointer(attrib, size, type, false, 0, 0);\r\n  gl.enableVertexAttribArray(attrib);\r\n}\r\n\r\nfunction unbindAttribute(gl: WebGLRenderingContext, attrib: number) {\r\n  gl.disableVertexAttribArray(attrib);\r\n}\r\n\r\nfunction makeProgramWithoutTextureMapping(gl: WebGLRenderingContext): NonTextureMappingProgramInfo {\r\n  // Uniform Names\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_NORMAL_MATRIX = 'uNormalMatrix';\r\n  const U_LIGHT_DIRECTION = 'uLightDirection';\r\n  const U_AMBIENT_COLOR = 'uCa';\r\n  const U_DIFFUSE_COLOR = 'uCd';\r\n  const U_SPECULAR_COLOR = 'uCs';\r\n  const U_SPECULARITY = 'uSpecularity';\r\n  const U_COLOR = 'uColor';\r\n  // Attribute Names\r\n  const A_POSITION = 'aPosition';\r\n  const A_NORMAL = 'aNormal';\r\n  // Varying Names\r\n  const V_NORMAL = 'vNormal';\r\n\r\n  const vsSource = glsl`\r\n    // Uniforms\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat4 ${U_NORMAL_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    uniform lowp vec4 ${U_COLOR};\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec3 ${A_NORMAL};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      ${V_NORMAL} = normalize(${U_VIEW_MATRIX} * ${U_NORMAL_MATRIX} * vec4(${A_NORMAL}, 0)).xyz;\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n    }\r\n  `;\r\n\r\n  const fsSource = glsl`\r\n    // Uniforms\r\n    uniform highp vec3 ${U_LIGHT_DIRECTION};\r\n    uniform lowp vec3 ${U_AMBIENT_COLOR};\r\n    uniform lowp vec3 ${U_DIFFUSE_COLOR};\r\n    uniform lowp vec3 ${U_SPECULAR_COLOR};\r\n    uniform lowp float ${U_SPECULARITY};\r\n    uniform lowp vec4 ${U_COLOR};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      // Apply lighting\r\n      highp vec3 u = normalize(${U_LIGHT_DIRECTION});\r\n      highp vec3 v = 2.0 * dot(u, ${V_NORMAL}) * ${V_NORMAL} - u; // Reflection direction\r\n      lowp float Id = max(0.0, (gl_FrontFacing ? +1.0 : -1.0) * dot(u, ${V_NORMAL})); // Diffuse intensity\r\n      lowp float Is = v[2] < 0.0 ? 0.0 : pow(v[2], ${U_SPECULARITY}); // Specular intensity\r\n      gl_FragColor = ${U_COLOR} * vec4(${U_AMBIENT_COLOR} + Id * ${U_DIFFUSE_COLOR}, 1.0) + Is * vec4(${U_SPECULAR_COLOR}, 1.0);\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, vsSource, fsSource);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      normal: gl.getAttribLocation(program, A_NORMAL),\r\n    },\r\n    uniforms: {\r\n      matrices: {\r\n        projection: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n        view: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n        model: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n        normal: getUniformLocation(gl, program, U_NORMAL_MATRIX),\r\n      },\r\n      light: {\r\n        direction: getUniformLocation(gl, program, U_LIGHT_DIRECTION),\r\n        ambientColor: getUniformLocation(gl, program, U_AMBIENT_COLOR),\r\n        diffuseColor: getUniformLocation(gl, program, U_DIFFUSE_COLOR),\r\n        specularColor: getUniformLocation(gl, program, U_SPECULAR_COLOR),\r\n        specularity: getUniformLocation(gl, program, U_SPECULARITY),\r\n      },\r\n      color: getUniformLocation(gl, program, U_COLOR),\r\n    },\r\n  };\r\n}\r\n\r\nfunction makeProgramWithTextureMapping(gl: WebGLRenderingContext): TextureMappingProgramInfo {\r\n  // Uniform Names\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_NORMAL_MATRIX = 'uNormalMatrix';\r\n  const U_TEXTURE_MATRIX = 'uTextureMatrix';\r\n  const U_SAMPLER = 'uSampler';\r\n  const U_LIGHT_DIRECTION = 'uLightDirection';\r\n  const U_AMBIENT_COLOR = 'uCa';\r\n  const U_DIFFUSE_COLOR = 'uCd';\r\n  const U_SPECULAR_COLOR = 'uCs';\r\n  const U_SPECULARITY = 'uSpecularity';\r\n  const U_COLOR = 'uColor';\r\n  // Attribute Names\r\n  const A_POSITION = 'aPosition';\r\n  const A_NORMAL = 'aNormal';\r\n  const A_TEXTURE_COORDS = 'aTextureCoords';\r\n  // Varying Names\r\n  const V_NORMAL = 'vNormal';\r\n  const V_TEXTURE_COORDS = 'vTextureCoords';\r\n\r\n  const vsSource = glsl`\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec3 ${A_NORMAL};\r\n    attribute vec2 ${A_TEXTURE_COORDS};\r\n    // Uniforms\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat4 ${U_NORMAL_MATRIX};\r\n    uniform mat3 ${U_TEXTURE_MATRIX};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    varying highp vec3 ${V_TEXTURE_COORDS};\r\n    // Program\r\n    void main(void) {\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n      ${V_NORMAL} = normalize(${U_VIEW_MATRIX} * ${U_NORMAL_MATRIX} * vec4(${A_NORMAL}, 0)).xyz;\r\n      ${V_TEXTURE_COORDS} = ${U_TEXTURE_MATRIX} * vec3(${A_TEXTURE_COORDS}, 1);\r\n    }\r\n  `;\r\n\r\n  const fsSource = glsl`\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    varying highp vec3 ${V_TEXTURE_COORDS};\r\n    // Uniforms\r\n    uniform highp vec4 ${U_COLOR};\r\n    uniform highp vec3 ${U_LIGHT_DIRECTION};\r\n    uniform lowp vec3 ${U_AMBIENT_COLOR};\r\n    uniform lowp vec3 ${U_DIFFUSE_COLOR};\r\n    uniform lowp vec3 ${U_SPECULAR_COLOR};\r\n    uniform lowp float ${U_SPECULARITY};\r\n    uniform sampler2D ${U_SAMPLER};\r\n    // Program\r\n    void main(void) {\r\n      // Apply lighting\r\n      highp vec3 u = normalize(${U_LIGHT_DIRECTION}); // Light direction\r\n      highp vec3 v = 2.0 * dot(u, ${V_NORMAL}) * ${V_NORMAL} - u; // Reflection direction\r\n      lowp float Id = max(0.0, (gl_FrontFacing ? +1.0 : -1.0) * dot(u, ${V_NORMAL})); // Diffuse intensity\r\n      lowp float Is = v[2] < 0.0 ? 0.0 : pow(v[2], ${U_SPECULARITY}); // Specular intensity\r\n      gl_FragColor = ${U_COLOR} * texture2D(${U_SAMPLER}, ${V_TEXTURE_COORDS}.xy) * vec4(${U_AMBIENT_COLOR} + Id * ${U_DIFFUSE_COLOR}, 1.0) + Is * vec4(${U_SPECULAR_COLOR}, 1.0);\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, vsSource, fsSource);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      normal: gl.getAttribLocation(program, A_NORMAL),\r\n      textureCoords: gl.getAttribLocation(program, A_TEXTURE_COORDS),\r\n    },\r\n    uniforms: {\r\n      matrices: {\r\n        projection: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n        view: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n        model: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n        normal: getUniformLocation(gl, program, U_NORMAL_MATRIX),\r\n        texture: getUniformLocation(gl, program, U_TEXTURE_MATRIX),\r\n      },\r\n      light: {\r\n        direction: getUniformLocation(gl, program, U_LIGHT_DIRECTION),\r\n        ambientColor: getUniformLocation(gl, program, U_AMBIENT_COLOR),\r\n        diffuseColor: getUniformLocation(gl, program, U_DIFFUSE_COLOR),\r\n        specularColor: getUniformLocation(gl, program, U_SPECULAR_COLOR),\r\n        specularity: getUniformLocation(gl, program, U_SPECULARITY),\r\n      },\r\n      sampler: getUniformLocation(gl, program, U_SAMPLER),\r\n      color: getUniformLocation(gl, program, U_COLOR),\r\n    },\r\n  };\r\n}\r\n\r\nfunction buildProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string) {\r\n  const program = gl.createProgram();\r\n\r\n  if (!program) {\r\n    throw new Error('Failed to create program.');\r\n  }\r\n\r\n  gl.attachShader(program, buildShader(gl, gl.VERTEX_SHADER, vsSource));\r\n  gl.attachShader(program, buildShader(gl, gl.FRAGMENT_SHADER, fsSource));\r\n  gl.linkProgram(program);\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    const message = `Unable to initialize the shader program: ${gl.getProgramInfoLog(program)}`;\r\n    gl.deleteProgram(program);\r\n    throw new Error(message);\r\n  }\r\n\r\n  return program;\r\n}\r\n\r\nfunction buildShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n  const shader = gl.createShader(type);\r\n  if (!shader) {\r\n    throw new Error('Failed to create shader.');\r\n  }\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    const message = `An error occurred compiling the shaders: ${gl.getShaderInfoLog(shader)}`;\r\n    gl.deleteShader(shader);\r\n    throw new Error(message);\r\n  }\r\n  return shader;\r\n}\r\n\r\nfunction getUniformLocation(gl: WebGLRenderingContext, program: WebGLProgram, name: string): WebGLUniformLocation {\r\n  return gl.getUniformLocation(program, name) || error(`No uniform named \"${name}\" was found.`);\r\n}\r\n\r\nfunction error<T>(message: string): T {\r\n  throw new Error(message);\r\n}\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.scss'\r\n\r\n// You need bootstrap? $ yarn add bootstrap\r\n// See: https://create-react-app.dev/docs/adding-bootstrap\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// Single-page application (SPA)\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want to Pre-render with react-snap\r\n// Step 1: install $ yarn add --dev react-snap\r\n// Step 2: add to package.json run script: \"postbuild\": \"react-snap\"\r\n// Step 3: Add to package.json: \"reactSnap\":{\"inlineCss\":true}\r\n// Step 3: replace to the script below.\r\n\r\n/*\r\nimport { hydrate, render } from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst rootElement = document.getElementById('root')\r\nif (rootElement && rootElement!.hasChildNodes()) {\r\n  hydrate(<AppRouter />, rootElement)\r\n\r\n  // Precache - set to 'register' once you Pre-render\r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: http://bit.ly/CRA-PWA\r\n  serviceWorker.register()\r\n} else {\r\n  render(<AppRouter />, rootElement)\r\n}\r\n*/\r\n"],"sourceRoot":""}