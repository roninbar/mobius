{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["glsl","String","raw","LIGHTDIR","vec3","normalize","create","fromValues","BLACK","BLUE","GREEN","RED","GOLD","SILVER","WHITE","WHITE25","WHITE50","STRIP_COLORS","H","STEP","Math","PI","App","useState","theta","setTheta","anchor","setAnchor","mat4","modelMatrix","setModelMatrix","simpleProgramInfo","useRef","textureMappingProgramInfo","cubeMappingProgramInfo","canvas","useEffect","gl","current","getContext","Error","loadAllTexturesAsync","a","promises","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","unit","activeTexture","texPiece","createTexture","bindTexture","TEXTURE_2D","push","loadTextureAsync","process","TEXTURE10","texPortrait","TEXTURE0","texEnv","axis","sign","TEXTURE_CUBE_MAP","slice","toLowerCase","Promise","all","glslVertex","glslFragment","program","buildProgram","attribs","position","getAttribLocation","normal","uniforms","matrices","projection","getUniformLocation","view","model","light","direction","ambientColor","diffuseColor","specularColor","specularity","color","makeSimpleProgram","simpleProgram","simpleUniforms","textureCoords","texture","sampler","makeTextureMappingProgram","texProgram","texUniforms","makeCubeMappingProgram","cubeProgram","cubeUniforms","useProgram","uniform3fv","uniform1f","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DEPTH_TEST","depthFunc","LEQUAL","clearDepth","clearColor","CULL_FACE","cullFace","BACK","then","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","afid","requestAnimationFrame","f","time","now","Date","getSeconds","getMinutes","getHours","cancelAnimationFrame","simpleAttribs","texAttribs","cubeAttribs","projectionMatrix","perspective","width","height","viewMatrix","fromTranslation","textureMatrix","mat3","uniformMatrix4fv","drawWithoutTexture","topology","positionBuffer","normalBuffer","colorBuffer","drawArrays","deleteBuffer","drawWithTexture","textureCoordBuffer","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","FRONT","scale","makeRim","m","translate","t","uniform4fv","uniformMatrix3fv","uniform1i","positions","colors","normals","first","v","x","cos","y","sin","mode","TRIANGLE_FAN","count","makeFloatBufferFromArray","makeDisc","i","makeStrip","drawHand","length","angle","rotateZ","TRIANGLE_STRIP","makeHand","r","h","norm","sqrt","nr","nh","makeHubcap","rotateX","makeFrisbee","inverse","drawWithCubeMapping","className","ref","onPointerDown","currentTarget","pointerId","clientX","clientY","setPointerCapture","onPointerMove","dx","dy","distance","rot","fromRotation","mul","onPointerUp","releasePointerCapture","url","target","resolve","getParameter","ACTIVE_TEXTURE","image","Image","src","addEventListener","texImage2D","RGBA","UNSIGNED_BYTE","z","r0","r1","z0","z1","x0","x1","y0","y1","torsion","piece","s","tt","nTwists","ct","st","ctt","stt","r2","k","makeStripArrays","array","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","positionAttrib","normalAttrib","texCoordAttrib","texCoordBuffer","bindAttribute","FLOAT","unbindAttribute","attrib","size","type","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","vsSource","fsSource","createProgram","attachShader","buildShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","message","getProgramInfoLog","deleteProgram","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","name","error","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","rootElement","hasChildNodes","hydrate","debug","URL","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","event"],"mappings":"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","file":"static/js/main.b48948c1.chunk.js","sourcesContent":["/* eslint-disable one-var */\r\n/* eslint-disable no-bitwise */\r\n\r\nimport { mat3, mat4, vec3 } from 'gl-matrix';\r\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react';\r\nimport './App.scss';\r\n\r\ninterface ProgramInfo {\r\n  program: WebGLProgram;\r\n  attribs: {\r\n    position: number;\r\n    normal: number;\r\n  };\r\n  uniforms: {\r\n    matrices: {\r\n      projection: WebGLUniformLocation;\r\n      view: WebGLUniformLocation;\r\n      model: WebGLUniformLocation;\r\n      normal: WebGLUniformLocation;\r\n    };\r\n    color: WebGLUniformLocation;\r\n    light: {\r\n      direction: WebGLUniformLocation;\r\n      specularColor: WebGLUniformLocation;\r\n      specularity: WebGLUniformLocation;\r\n    };\r\n  };\r\n}\r\n\r\ntype SimpleProgramInfo = ProgramInfo & {\r\n  attribs: {\r\n  };\r\n  uniforms: {\r\n    light: {\r\n      ambientColor: WebGLUniformLocation;\r\n      diffuseColor: WebGLUniformLocation;\r\n    };\r\n  };\r\n};\r\n\r\ntype TextureMappingProgramInfo = ProgramInfo & {\r\n  attribs: {\r\n    textureCoords: number;\r\n  };\r\n  uniforms: {\r\n    matrices: {\r\n      texture: WebGLUniformLocation;\r\n    };\r\n    light: {\r\n      ambientColor: WebGLUniformLocation;\r\n      diffuseColor: WebGLUniformLocation;\r\n    };\r\n    sampler: WebGLSampler;\r\n  };\r\n};\r\n\r\ntype CubeMappingProgramInfo = ProgramInfo & {\r\n  uniforms: {\r\n    sampler: WebGLSampler;\r\n  };\r\n};\r\n\r\ntype Primitive = {\r\n  mode: number;\r\n  first: number;\r\n  count: number;\r\n};\r\n\r\ninterface Actor {\r\n  topology: Primitive[];\r\n  positionBuffer: WebGLBuffer;\r\n  normalBuffer: WebGLBuffer;\r\n  colorBuffer: WebGLBuffer;\r\n  textureCoordBuffer?: WebGLBuffer;\r\n}\r\n\r\nconst glsl = String.raw;\r\n\r\nconst LIGHTDIR = vec3.normalize(vec3.create(), vec3.fromValues(0.85, 1.0, 0.75));\r\n\r\nconst BLACK = [0, 0, 0];\r\nconst BLUE = [0, 0, 1];\r\nconst GREEN = [0, 0.75, 0];\r\nconst RED = [1, 0, 0];\r\nconst GOLD = [1.0, 0.8, 0.5];\r\nconst SILVER = [0.75, 0.75, 0.75];\r\nconst WHITE = [1, 1, 1];\r\nconst WHITE25 = [0.25, 0.25, 0.25];\r\nconst WHITE50 = [0.5, 0.5, 0.5];\r\n\r\nconst STRIP_COLORS = [WHITE50, WHITE50, WHITE50, WHITE50];\r\n\r\nconst R = 1.0, H = 0.1;\r\nconst STEP = Math.PI / 36;\r\nconst EPSILON = 0.001;\r\n\r\nexport default function App() {\r\n\r\n  const [theta, setTheta] = useState(0); // The angle of the hour hand, in radians.\r\n  const [anchor, setAnchor] = useState<{ x: number, y: number; } | null>();\r\n  const [modelMatrix, setModelMatrix] = useState(mat4.create());\r\n\r\n  const simpleProgramInfo: MutableRefObject<SimpleProgramInfo | null> = useRef(null);\r\n  const textureMappingProgramInfo: MutableRefObject<TextureMappingProgramInfo | null> = useRef(null);\r\n  const cubeMappingProgramInfo: MutableRefObject<CubeMappingProgramInfo | null> = useRef(null);\r\n\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n\r\n  // #region Initialize WebGL stuff and start the animation.\r\n  useEffect(function () {\r\n\r\n    const gl = canvas.current?.getContext('webgl');\r\n\r\n    if (!gl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    const loadAllTexturesAsync = async function () {\r\n      const promises: Promise<void>[] = [];\r\n\r\n      // Hours\r\n      for (const unit of [gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23]) {\r\n        gl.activeTexture(unit);\r\n        const texPiece = gl.createTexture();\r\n        if (!texPiece) {\r\n          throw new Error('Failed to create texture.');\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D, texPiece);\r\n        promises.push(loadTextureAsync(gl, `${process.env.PUBLIC_URL}/texture/hours${unit - gl.TEXTURE20}.bmp`));\r\n      }\r\n\r\n      // Portrait of Mobius\r\n      gl.activeTexture(gl.TEXTURE10);\r\n      const texPortrait = gl.createTexture();\r\n      if (!texPortrait) {\r\n        throw new Error('Failed to create texture.');\r\n      }\r\n      gl.bindTexture(gl.TEXTURE_2D, texPortrait);\r\n      promises.push(loadTextureAsync(gl, `${process.env.PUBLIC_URL}/texture/mobius.png`));\r\n\r\n      // Environment\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      const texEnv = gl.createTexture();\r\n      if (!texEnv) {\r\n        throw new Error('Failed to create texture.');\r\n      }\r\n      for (const axis of ['X', 'Y', 'Z']) {\r\n        for (const sign of ['NEGATIVE', 'POSITIVE']) {\r\n          gl.bindTexture(gl.TEXTURE_CUBE_MAP, texEnv);\r\n          promises.push(\r\n            loadTextureAsync(gl, `${process.env.PUBLIC_URL}/texture/env/${sign.slice(0, 3).toLowerCase()}-${axis.toLowerCase()}.jpg`, `TEXTURE_CUBE_MAP_${sign as 'POSITIVE' | 'NEGATIVE'}_${axis as 'X' | 'Y' | 'Z'}`),\r\n          );\r\n        }\r\n      }\r\n\r\n      return Promise.all(promises);\r\n    };\r\n\r\n    const { program: simpleProgram, uniforms: simpleUniforms } = simpleProgramInfo.current = makeSimpleProgram(gl);\r\n    const { program: texProgram, uniforms: texUniforms } = textureMappingProgramInfo.current = makeTextureMappingProgram(gl);\r\n    const { program: cubeProgram, uniforms: cubeUniforms } = cubeMappingProgramInfo.current = makeCubeMappingProgram(gl);\r\n\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniform3fv(simpleUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(simpleUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(simpleUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(simpleUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(simpleUniforms.light.specularity, 10);\r\n\r\n    gl.useProgram(texProgram);\r\n    gl.uniform3fv(texUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(texUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(texUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(texUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(texUniforms.light.specularity, 10);\r\n\r\n    gl.useProgram(cubeProgram);\r\n    gl.uniform3fv(cubeUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(cubeUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(cubeUniforms.light.specularity, 10);\r\n\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    gl.clearDepth(1);\r\n    gl.clearColor(0, 0, 0, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.cullFace(gl.BACK);\r\n\r\n    loadAllTexturesAsync().then(function () {\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n\r\n      for (const unit of [gl.TEXTURE10, gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23]) {\r\n        gl.activeTexture(unit);\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n      }\r\n    });\r\n\r\n    let afid = requestAnimationFrame(function f(time) {\r\n      // setTheta(time / 12000 * Math.PI);\r\n      const now = new Date();\r\n      setTheta(((now.getSeconds() / 60 + now.getMinutes()) / 60 + now.getHours()) / 6 * Math.PI);\r\n      afid = requestAnimationFrame(f);\r\n    });\r\n\r\n    return () => {\r\n      cancelAnimationFrame(afid);\r\n    };\r\n\r\n  }, []);\r\n  // #endregion\r\n\r\n  // #region Render one frame.\r\n  useEffect(function () {\r\n\r\n    const gl = canvas.current?.getContext('webgl');\r\n\r\n    if (!gl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    if (!simpleProgramInfo.current || !textureMappingProgramInfo.current || !cubeMappingProgramInfo.current) {\r\n      throw new Error('Missing shader program!');\r\n    }\r\n\r\n    const { program: simpleProgram, attribs: simpleAttribs, uniforms: simpleUniforms } = simpleProgramInfo.current;\r\n    const { program: texProgram, attribs: texAttribs, uniforms: texUniforms } = textureMappingProgramInfo.current;\r\n    const { program: cubeProgram, attribs: cubeAttribs, uniforms: cubeUniforms } = cubeMappingProgramInfo.current;\r\n\r\n    const projectionMatrix = mat4.perspective(mat4.create(), Math.PI / 5, gl.canvas.width / gl.canvas.height, 0.1, 100);\r\n    const viewMatrix = mat4.fromTranslation(mat4.create(), [0, 0, -4]);\r\n    const textureMatrix = mat3.create();\r\n\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.projection, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.view, false, viewMatrix);\r\n\r\n    gl.useProgram(texProgram);\r\n    gl.uniformMatrix4fv(texUniforms.matrices.projection, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(texUniforms.matrices.view, false, viewMatrix);\r\n\r\n    gl.useProgram(cubeProgram);\r\n    gl.uniformMatrix4fv(cubeUniforms.matrices.projection, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(cubeUniforms.matrices.view, false, viewMatrix);\r\n\r\n    const drawWithoutTexture = function ({ topology, positionBuffer, normalBuffer, colorBuffer }: Actor) {\r\n      try {\r\n        drawArrays(gl, topology, simpleAttribs.position, positionBuffer, simpleAttribs.normal, normalBuffer);\r\n      } finally {\r\n        if (colorBuffer) gl.deleteBuffer(colorBuffer);\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    const drawWithTexture = function ({ topology, positionBuffer, normalBuffer, colorBuffer, textureCoordBuffer }: Actor) {\r\n      try {\r\n        drawArrays(gl, topology, texAttribs.position, positionBuffer, texAttribs.normal, normalBuffer, texAttribs.textureCoords, textureCoordBuffer);\r\n      } finally {\r\n        if (textureCoordBuffer) gl.deleteBuffer(textureCoordBuffer);\r\n        if (colorBuffer) gl.deleteBuffer(colorBuffer);\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    const drawWithCubeMapping = function ({ topology, positionBuffer, normalBuffer }: Actor) {\r\n      try {\r\n        drawArrays(gl, topology, cubeAttribs.position, positionBuffer, cubeAttribs.normal, normalBuffer);\r\n      } finally {\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    gl.cullFace(gl.FRONT);\r\n\r\n    // #region Inside of Rim\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, mat4.scale(mat4.create(), modelMatrix, [1.2, 1.2, 1]));\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, mat4.scale(mat4.create(), modelMatrix, [1 / 1.2, 1 / 1.2, 1]));\r\n    drawWithoutTexture(makeRim(gl));\r\n    // #endregion\r\n\r\n    gl.cullFace(gl.BACK);\r\n\r\n    // #region Clock Face\r\n    {\r\n      const m = mat4.translate(mat4.create(), modelMatrix, [0, 0, -H]);\r\n      const t = mat3.scale(mat3.create(), mat3.translate(mat3.create(), textureMatrix, [0.5, 0.5]), [0.75, -0.75]);\r\n      gl.useProgram(texProgram);\r\n      gl.uniform4fv(texUniforms.color, [...WHITE, 1]);\r\n      gl.uniform3fv(texUniforms.light.direction, LIGHTDIR);\r\n      gl.uniform3fv(texUniforms.light.ambientColor, WHITE25);\r\n      gl.uniform3fv(texUniforms.light.diffuseColor, WHITE);\r\n      gl.uniform3fv(texUniforms.light.specularColor, BLACK);\r\n      gl.uniform1f(texUniforms.light.specularity, 10);\r\n      gl.uniformMatrix4fv(texUniforms.matrices.model, false, mat4.scale(mat4.create(), m, [1.199, 1.199, 1]));\r\n      gl.uniformMatrix4fv(texUniforms.matrices.normal, false, mat4.scale(mat4.create(), m, [1 / 1.2, 1 / 1.2, 1]));\r\n      gl.uniformMatrix3fv(texUniforms.matrices.texture, false, t);\r\n      gl.uniform1i(texUniforms.sampler, 10);\r\n      drawWithTexture(makeDisc(gl));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Hours Strip\r\n    gl.useProgram(texProgram);\r\n    gl.uniform3fv(texUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(texUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(texUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(texUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(texUniforms.light.specularity, 12);\r\n    gl.uniform4fv(texUniforms.color, [...GOLD, 1]);\r\n    gl.uniformMatrix4fv(texUniforms.matrices.model, false, modelMatrix);\r\n    gl.uniformMatrix3fv(texUniforms.matrices.texture, false, textureMatrix);\r\n    for (let i = 0; i < 4; i++) {\r\n      gl.uniform1i(texUniforms.sampler, 20 + i);\r\n      drawWithTexture(makeStrip(gl, theta, i));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Hands\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniform3fv(simpleUniforms.light.direction, LIGHTDIR);\r\n    gl.uniform3fv(simpleUniforms.light.ambientColor, WHITE25);\r\n    gl.uniform3fv(simpleUniforms.light.diffuseColor, WHITE);\r\n    gl.uniform3fv(simpleUniforms.light.specularColor, BLACK);\r\n    const drawHand = function (height: number, width: number, length: number, angle: number) {\r\n      const m = mat4.rotateZ(mat4.create(), modelMatrix, -angle);\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, m);\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, m);\r\n      drawWithoutTexture(makeHand(gl, height, width, length));\r\n    };\r\n    gl.uniform1f(simpleUniforms.light.specularity, 1);\r\n    gl.uniform4fv(simpleUniforms.color, [...BLUE, 1]);\r\n    drawHand(0.03, 0.02, 0.6, theta); // Hours\r\n    gl.uniform4fv(simpleUniforms.color, [...GREEN, 1]);\r\n    drawHand(0.06, 0.02, 0.8, theta * 12); // Minutes\r\n    gl.uniform4fv(simpleUniforms.color, [...RED, 1]);\r\n    drawHand(0.09, 0.01, 0.85, theta * 12 * 60); // Seconds\r\n    // #endregion\r\n\r\n    // #region Hubcap\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, modelMatrix);\r\n    gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, modelMatrix);\r\n    gl.uniform3fv(simpleUniforms.light.specularColor, WHITE);\r\n    gl.uniform1f(simpleUniforms.light.specularity, 10);\r\n    gl.uniform4fv(simpleUniforms.color, [...RED, 1]);\r\n    drawWithoutTexture(makeHubcap(gl, 0.12));\r\n    // #endregion\r\n\r\n    gl.useProgram(simpleProgram);\r\n    gl.uniform4fv(simpleUniforms.color, [...GOLD, 1]);\r\n    gl.uniform1f(simpleUniforms.light.specularity, 32);\r\n\r\n    // #region Back of Case\r\n    {\r\n      const m = mat4.rotateX(mat4.create(), mat4.translate(mat4.create(), modelMatrix, [0, 0, -H]), Math.PI);\r\n      gl.useProgram(simpleProgram);\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, mat4.scale(mat4.create(), m, [1.2, 1.2, 0.24]));\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, mat4.scale(mat4.create(), m, [1 / 1.2, 1 / 1.2, 1 / 0.24]));\r\n      drawWithoutTexture(makeFrisbee(gl));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Outside of Rim\r\n    {\r\n      const scale = vec3.fromValues(1.2, 1.2, 1);\r\n      gl.useProgram(simpleProgram);\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.model, false, mat4.scale(mat4.create(), modelMatrix, scale));\r\n      gl.uniformMatrix4fv(simpleUniforms.matrices.normal, false, mat4.scale(mat4.create(), modelMatrix, vec3.inverse(vec3.create(), scale)));\r\n      drawWithoutTexture(makeRim(gl));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Front of Case (glass)\r\n    {\r\n      const m = mat4.translate(mat4.create(), modelMatrix, [0, 0, +H]);\r\n      const scale = vec3.fromValues(1.2, 1.2, 0.24);\r\n      gl.useProgram(cubeProgram);\r\n      gl.uniformMatrix4fv(cubeUniforms.matrices.model, false, mat4.scale(mat4.create(), m, scale));\r\n      gl.uniformMatrix4fv(cubeUniforms.matrices.normal, false, mat4.scale(mat4.create(), m, vec3.inverse(vec3.create(), scale)));\r\n      gl.uniform4fv(cubeUniforms.color, [...WHITE, 0.25]);\r\n      gl.uniform1f(cubeUniforms.light.specularity, 128);\r\n      gl.uniform1i(cubeUniforms.sampler, 0);\r\n      drawWithCubeMapping(makeFrisbee(gl));\r\n    }\r\n    // #endregion\r\n\r\n  }, [theta, modelMatrix]);\r\n  // #endregion\r\n\r\n  // #region Event Handlers \r\n  const onPointerDown = ({ currentTarget, pointerId, clientX: x, clientY: y }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    currentTarget.setPointerCapture(pointerId);\r\n    setAnchor({ x, y });\r\n  };\r\n\r\n  const onPointerUp = ({ currentTarget, pointerId }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    setAnchor(null);\r\n    currentTarget.releasePointerCapture(pointerId);\r\n  };\r\n\r\n  const onPointerMove = ({ clientX: x, clientY: y }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    if (anchor) {\r\n      const dx = x - anchor.x;\r\n      const dy = y - anchor.y;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n      if (distance > 0) {\r\n        const rot = mat4.fromRotation(mat4.create(), 0.01 * distance, [dy, dx, 0]);\r\n        setModelMatrix(mat4.mul(mat4.create(), rot, modelMatrix));\r\n        setAnchor({ x, y });\r\n      }\r\n    }\r\n  };\r\n  // #endregion\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h2>M&ouml;bius Clock</h2>\r\n        <canvas\r\n          width=\"768px\"\r\n          height=\"768px\"\r\n          ref={canvas}\r\n          onPointerDown={onPointerDown}\r\n          onPointerMove={onPointerMove}\r\n          onPointerUp={onPointerUp}\r\n        />\r\n        <p>Use mouse or touch to roll the clock around.</p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction loadTextureAsync(\r\n  gl: WebGLRenderingContext,\r\n  url: string,\r\n  target: `TEXTURE_CUBE_MAP_${'NEGATIVE' | 'POSITIVE'}_${'X' | 'Y' | 'Z'}` | 'TEXTURE_2D' = 'TEXTURE_2D',\r\n): Promise<void> {\r\n  return new Promise(function (resolve) {\r\n    const unit = gl.getParameter(gl.ACTIVE_TEXTURE);\r\n    const image = new Image();\r\n    image.src = url;\r\n    image.addEventListener('load', function () {\r\n      gl.activeTexture(unit);\r\n      gl.texImage2D(gl[target], 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n      return resolve();\r\n    });\r\n  });\r\n}\r\n\r\nfunction makeFrisbee(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [0, 0, R];\r\n  const normals = [0, 0, 1];\r\n  const colors = [...GOLD];\r\n\r\n  let first = 0, v = 1;\r\n\r\n  const r = R * Math.sin(STEP);\r\n  const z = R * Math.cos(STEP);\r\n\r\n  for (let f = -Math.PI; f < Math.PI + EPSILON; f += STEP, v++) {\r\n    const x = r * Math.cos(f), y = r * Math.sin(f);\r\n\r\n    positions.push(x, y, z);\r\n    normals.push(x, y, z);\r\n    colors.push(...GOLD);\r\n  }\r\n\r\n  topology.push({ mode: gl.TRIANGLE_FAN, first, count: v - first });\r\n  first = v;\r\n\r\n  for (let t = STEP; t < 0.5 * Math.PI - EPSILON; t += STEP) {\r\n    const r0 = R * Math.sin(t), r1 = R * Math.sin(t + STEP);\r\n    const z0 = R * Math.cos(t), z1 = R * Math.cos(t + STEP);\r\n\r\n    for (let f = -Math.PI; f < Math.PI + EPSILON; f += STEP, v += 2) {\r\n      const x0 = r0 * Math.cos(f), x1 = r1 * Math.cos(f);\r\n      const y0 = r0 * Math.sin(f), y1 = r1 * Math.sin(f);\r\n\r\n      positions.push(x0, y0, z0);\r\n      normals.push(x0, y0, z0);\r\n      colors.push(...GOLD);\r\n\r\n      positions.push(x1, y1, z1);\r\n      normals.push(x1, y1, z1);\r\n      colors.push(...GOLD);\r\n    }\r\n\r\n    topology.push({ mode: gl.TRIANGLE_STRIP, first, count: v - first });\r\n    first = v;\r\n  }\r\n\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeRim(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [];\r\n  const normals = [];\r\n  const colors = [];\r\n  for (let t = 0; t < 2 * Math.PI + EPSILON; t += STEP) {\r\n    positions.push(R * Math.cos(t), R * Math.sin(t), +H);\r\n    normals.push(Math.cos(t), Math.sin(t), 0);\r\n    colors.push(...GOLD);\r\n    positions.push(R * Math.cos(t), R * Math.sin(t), -H);\r\n    normals.push(Math.cos(t), Math.sin(t), 0);\r\n    colors.push(...GOLD);\r\n  }\r\n  topology.push({ mode: gl.TRIANGLE_STRIP, first: 0, count: positions.length / 3 });\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeDisc(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [0, 0, 0];\r\n  const colors = [...SILVER];\r\n  const normals = [0, 0, 1];\r\n  const textureCoords = [0, 0];\r\n\r\n  let first = 0, v = 1;\r\n  for (let t = 0; t < 2 * Math.PI + EPSILON; t += STEP, v++) {\r\n    const x = R * Math.cos(t);\r\n    const y = R * Math.sin(t);\r\n    positions.push(x, y, 0);\r\n    normals.push(0, 0, 1);\r\n    colors.push(...SILVER);\r\n    textureCoords.push(x / R, y / R);\r\n  }\r\n  topology.push({ mode: gl.TRIANGLE_FAN, first, count: v - first });\r\n  first = v;\r\n\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n    textureCoordBuffer: makeFloatBufferFromArray(gl, textureCoords),\r\n  };\r\n}\r\n\r\nfunction makeHubcap(gl: WebGLRenderingContext, height: number): Actor {\r\n  const r = 0.05;\r\n  const h = 0.01;\r\n  const norm = Math.sqrt(r * r + h * h);\r\n  const nr = r / norm;\r\n  const nh = h / norm;\r\n  const positions = [0, 0, height + h];\r\n  const normals = [0, 0, 1];\r\n  const colors = [...SILVER];\r\n  for (let t = 0; t < 2 * Math.PI; t += Math.PI / 30) {\r\n    positions.push(r * Math.cos(t), r * Math.sin(t), height);\r\n    normals.push(nh * Math.cos(t), nh * Math.sin(t), nr);\r\n    colors.push(...SILVER);\r\n  }\r\n  const count = positions.length / 3;\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_FAN, first: 0, count }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeHand(gl: WebGLRenderingContext, height: number, width: number, length: number): Actor {\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_STRIP, first: 0, count: 4 }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, [\r\n      -width, -0.2 * length, height,\r\n      +width, -0.2 * length, height,\r\n      -width, length, height,\r\n      +width, length, height,\r\n    ]),\r\n    normalBuffer: makeFloatBufferFromArray(gl, [\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n    ]),\r\n    colorBuffer: makeFloatBufferFromArray(gl, [\r\n      ...SILVER,\r\n      ...SILVER,\r\n      ...SILVER,\r\n      ...SILVER,\r\n    ]),\r\n  };\r\n}\r\n\r\nfunction makeStrip(gl: WebGLRenderingContext, torsion: number, piece: number): Actor {\r\n  const { positions, normals, colors, textureCoords } = makeStripArrays(torsion, piece);\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_STRIP, first: 0, count: positions.length / 3 }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n    textureCoordBuffer: makeFloatBufferFromArray(gl, textureCoords),\r\n  };\r\n}\r\n\r\nfunction makeStripArrays(theta: number, piece: number) {\r\n  const textureCoords: number[] = [];\r\n  const positions: number[] = [];\r\n  const normals: number[] = [];\r\n  const colors: number[] = [];\r\n  const nTwists = 3;\r\n  for (let s = 0.0; s < 1.001; s += 0.033333) {\r\n    const t = (piece + s) * Math.PI;\r\n    const tt = nTwists * 0.5 * (t - theta);\r\n    const ct = Math.cos(t), st = Math.sin(t);\r\n    const ctt = Math.cos(tt), stt = Math.sin(tt);\r\n    // Position\r\n    const r1 = R + H * Math.cos(tt);\r\n    const r2 = R - H * Math.cos(tt);\r\n    positions.push(r1 * Math.sin(t), r1 * Math.cos(t), -H * Math.sin(tt));\r\n    positions.push(r2 * Math.sin(t), r2 * Math.cos(t), +H * Math.sin(tt));\r\n    // Normal\r\n    normals.push(-st * stt, -ct * stt, ct * ct * ctt + ctt * st * st);\r\n    normals.push(-st * stt, -ct * stt, ct * ct * ctt + ctt * st * st);\r\n    // Color\r\n    const color = [0, 0, 0];\r\n    for (let k = 0; k < 3; k++) {\r\n      color[k] = (1 - s) * STRIP_COLORS[piece][k] + s * STRIP_COLORS[(piece + 1) % STRIP_COLORS.length][k];\r\n    }\r\n    colors.push(...color, ...color);\r\n    // Texture Coordinates\r\n    textureCoords.push(s, 0, s, 1);\r\n  }\r\n  return { positions, normals, colors, textureCoords };\r\n}\r\n\r\nfunction makeFloatBufferFromArray(gl: WebGLRenderingContext, array: number[]) {\r\n  const buffer = gl.createBuffer();\r\n  if (!buffer) {\r\n    throw new Error('Failed to create buffer.');\r\n  }\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(array), gl.STATIC_DRAW);\r\n  return buffer;\r\n}\r\n\r\nfunction drawArrays(\r\n  gl: WebGLRenderingContext,\r\n  topology: Primitive[],\r\n  positionAttrib: number,\r\n  positionBuffer: WebGLBuffer,\r\n  normalAttrib?: number,\r\n  normalBuffer?: WebGLBuffer,\r\n  texCoordAttrib?: number,\r\n  texCoordBuffer?: WebGLBuffer,\r\n) {\r\n  bindAttribute(gl, positionAttrib, positionBuffer, 3, gl.FLOAT);\r\n  if (normalBuffer && typeof normalAttrib === 'number') {\r\n    bindAttribute(gl, normalAttrib, normalBuffer, 3, gl.FLOAT);\r\n  }\r\n  if (texCoordBuffer && typeof texCoordAttrib === 'number') {\r\n    bindAttribute(gl, texCoordAttrib, texCoordBuffer, 2, gl.FLOAT);\r\n  }\r\n  try {\r\n    for (const { mode, first, count } of topology) {\r\n      gl.drawArrays(mode, first, count);\r\n    }\r\n  } finally {\r\n    if (texCoordBuffer && typeof texCoordAttrib === 'number') {\r\n      unbindAttribute(gl, texCoordAttrib);\r\n    }\r\n    if (normalBuffer && typeof normalAttrib === 'number') {\r\n      unbindAttribute(gl, normalAttrib);\r\n    }\r\n    unbindAttribute(gl, positionAttrib);\r\n  }\r\n}\r\n\r\nfunction bindAttribute(gl: WebGLRenderingContext, attrib: number, buffer: WebGLBuffer, size: number, type: number) {\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.vertexAttribPointer(attrib, size, type, false, 0, 0);\r\n  gl.enableVertexAttribArray(attrib);\r\n}\r\n\r\nfunction unbindAttribute(gl: WebGLRenderingContext, attrib: number) {\r\n  gl.disableVertexAttribArray(attrib);\r\n}\r\n\r\nfunction makeSimpleProgram(gl: WebGLRenderingContext): SimpleProgramInfo {\r\n  // Uniform Names\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_NORMAL_MATRIX = 'uNormalMatrix';\r\n  const U_LIGHT_DIRECTION = 'uLightDirection';\r\n  const U_AMBIENT_COLOR = 'uCa';\r\n  const U_DIFFUSE_COLOR = 'uCd';\r\n  const U_SPECULAR_COLOR = 'uCs';\r\n  const U_SPECULARITY = 'uSpecularity';\r\n  const U_COLOR = 'uColor';\r\n  // Attribute Names\r\n  const A_POSITION = 'aPosition';\r\n  const A_NORMAL = 'aNormal';\r\n  // Varying Names\r\n  const V_NORMAL = 'vNormal';\r\n\r\n  const glslVertex = glsl`\r\n    // Uniforms\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat4 ${U_NORMAL_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    uniform lowp vec4 ${U_COLOR};\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec3 ${A_NORMAL};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      ${V_NORMAL} = normalize(${U_VIEW_MATRIX} * ${U_NORMAL_MATRIX} * vec4(${A_NORMAL}, 0)).xyz;\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n    }\r\n  `;\r\n\r\n  const glslFragment = glsl`\r\n    // Uniforms\r\n    uniform highp vec3 ${U_LIGHT_DIRECTION};\r\n    uniform lowp vec3 ${U_AMBIENT_COLOR};\r\n    uniform lowp vec3 ${U_DIFFUSE_COLOR};\r\n    uniform lowp vec3 ${U_SPECULAR_COLOR};\r\n    uniform lowp float ${U_SPECULARITY};\r\n    uniform lowp vec4 ${U_COLOR};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      highp vec3 n = normalize(${V_NORMAL});\r\n      highp vec3 u = ${U_LIGHT_DIRECTION};\r\n      highp vec3 v = -reflect(u, n); // Reflection direction\r\n      lowp float Id = max(0.0, (gl_FrontFacing ? +1.0 : -1.0) * dot(u, n)); // Diffuse intensity\r\n      lowp float Is = v[2] < 0.0 ? 0.0 : pow(v[2], ${U_SPECULARITY}); // Specular intensity\r\n      gl_FragColor = ${U_COLOR} * vec4(${U_AMBIENT_COLOR} + Id * ${U_DIFFUSE_COLOR}, 1.0) + Is * vec4(${U_SPECULAR_COLOR}, 1.0);\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, glslVertex, glslFragment);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      normal: gl.getAttribLocation(program, A_NORMAL),\r\n    },\r\n    uniforms: {\r\n      matrices: {\r\n        projection: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n        view: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n        model: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n        normal: getUniformLocation(gl, program, U_NORMAL_MATRIX),\r\n      },\r\n      light: {\r\n        direction: getUniformLocation(gl, program, U_LIGHT_DIRECTION),\r\n        ambientColor: getUniformLocation(gl, program, U_AMBIENT_COLOR),\r\n        diffuseColor: getUniformLocation(gl, program, U_DIFFUSE_COLOR),\r\n        specularColor: getUniformLocation(gl, program, U_SPECULAR_COLOR),\r\n        specularity: getUniformLocation(gl, program, U_SPECULARITY),\r\n      },\r\n      color: getUniformLocation(gl, program, U_COLOR),\r\n    },\r\n  };\r\n}\r\n\r\nfunction makeTextureMappingProgram(gl: WebGLRenderingContext): TextureMappingProgramInfo {\r\n  // Uniform Names\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_NORMAL_MATRIX = 'uNormalMatrix';\r\n  const U_TEXTURE_MATRIX = 'uTextureMatrix';\r\n  const U_SAMPLER = 'uSampler';\r\n  const U_LIGHT_DIRECTION = 'uLightDirection';\r\n  const U_AMBIENT_COLOR = 'uCa';\r\n  const U_DIFFUSE_COLOR = 'uCd';\r\n  const U_SPECULAR_COLOR = 'uCs';\r\n  const U_SPECULARITY = 'uSpecularity';\r\n  const U_COLOR = 'uColor';\r\n  // Attribute Names\r\n  const A_POSITION = 'aPosition';\r\n  const A_NORMAL = 'aNormal';\r\n  const A_TEXTURE_COORDS = 'aTextureCoords';\r\n  // Varying Names\r\n  const V_NORMAL = 'vNormal';\r\n  const V_TEXTURE_COORDS = 'vTextureCoords';\r\n\r\n  const glslVertex = glsl`\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec3 ${A_NORMAL};\r\n    attribute vec2 ${A_TEXTURE_COORDS};\r\n    // Uniforms\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat4 ${U_NORMAL_MATRIX};\r\n    uniform mat3 ${U_TEXTURE_MATRIX};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    varying highp vec3 ${V_TEXTURE_COORDS};\r\n    // Program\r\n    void main(void) {\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n      ${V_NORMAL} = normalize(${U_VIEW_MATRIX} * ${U_NORMAL_MATRIX} * vec4(${A_NORMAL}, 0)).xyz;\r\n      ${V_TEXTURE_COORDS} = ${U_TEXTURE_MATRIX} * vec3(${A_TEXTURE_COORDS}, 1);\r\n    }\r\n  `;\r\n\r\n  const glslFragment = glsl`\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    varying highp vec3 ${V_TEXTURE_COORDS};\r\n    // Uniforms\r\n    uniform highp vec4 ${U_COLOR};\r\n    uniform highp vec3 ${U_LIGHT_DIRECTION};\r\n    uniform lowp vec3 ${U_AMBIENT_COLOR};\r\n    uniform lowp vec3 ${U_DIFFUSE_COLOR};\r\n    uniform lowp vec3 ${U_SPECULAR_COLOR};\r\n    uniform lowp float ${U_SPECULARITY};\r\n    uniform sampler2D ${U_SAMPLER};\r\n    // Program\r\n    void main(void) {\r\n      // Apply lighting\r\n      highp vec3 n = normalize(${V_NORMAL});\r\n      highp vec3 u = ${U_LIGHT_DIRECTION}; // Light direction\r\n      highp vec3 v = -reflect(u, n); // Reflection direction\r\n      lowp float Id = max(0.0, (gl_FrontFacing ? +1.0 : -1.0) * dot(u, ${V_NORMAL})); // Diffuse intensity\r\n      lowp float Is = v[2] < 0.0 ? 0.0 : pow(v[2], ${U_SPECULARITY}); // Specular intensity\r\n      gl_FragColor = ${U_COLOR} * texture2D(${U_SAMPLER}, ${V_TEXTURE_COORDS}.xy) * vec4(${U_AMBIENT_COLOR} + Id * ${U_DIFFUSE_COLOR}, 1.0) + Is * vec4(${U_SPECULAR_COLOR}, 1.0);\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, glslVertex, glslFragment);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      normal: gl.getAttribLocation(program, A_NORMAL),\r\n      textureCoords: gl.getAttribLocation(program, A_TEXTURE_COORDS),\r\n    },\r\n    uniforms: {\r\n      matrices: {\r\n        projection: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n        view: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n        model: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n        normal: getUniformLocation(gl, program, U_NORMAL_MATRIX),\r\n        texture: getUniformLocation(gl, program, U_TEXTURE_MATRIX),\r\n      },\r\n      light: {\r\n        direction: getUniformLocation(gl, program, U_LIGHT_DIRECTION),\r\n        ambientColor: getUniformLocation(gl, program, U_AMBIENT_COLOR),\r\n        diffuseColor: getUniformLocation(gl, program, U_DIFFUSE_COLOR),\r\n        specularColor: getUniformLocation(gl, program, U_SPECULAR_COLOR),\r\n        specularity: getUniformLocation(gl, program, U_SPECULARITY),\r\n      },\r\n      sampler: getUniformLocation(gl, program, U_SAMPLER),\r\n      color: getUniformLocation(gl, program, U_COLOR),\r\n    },\r\n  };\r\n}\r\n\r\nfunction makeCubeMappingProgram(gl: WebGLRenderingContext) {\r\n  // Uniform Names\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_NORMAL_MATRIX = 'uNormalMatrix';\r\n  const U_SAMPLER = 'uSampler';\r\n  const U_LIGHT_DIRECTION = 'uLightDirection';\r\n  const U_AMBIENT_COLOR = 'uCa';\r\n  const U_DIFFUSE_COLOR = 'uCd';\r\n  const U_SPECULAR_COLOR = 'uCs';\r\n  const U_SPECULARITY = 'uSpecularity';\r\n  const U_COLOR = 'uColor';\r\n  // Attribute Names\r\n  const A_POSITION = 'aPosition';\r\n  const A_NORMAL = 'aNormal';\r\n  // Varying Names\r\n  const V_NORMAL = 'vNormal';\r\n\r\n  const glslVertex = glsl`\r\n    // Uniforms\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat4 ${U_NORMAL_MATRIX};\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec3 ${A_NORMAL};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      ${V_NORMAL} = normalize(${U_VIEW_MATRIX} * ${U_NORMAL_MATRIX} * vec4(${A_NORMAL}, 0)).xyz;\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n    }\r\n  `;\r\n\r\n  const glslFragment = glsl`\r\n    #define PI 3.1415926538\r\n\r\n    // Uniforms\r\n    uniform highp vec4 ${U_COLOR};\r\n    uniform highp vec3 ${U_LIGHT_DIRECTION};\r\n    uniform lowp vec3 ${U_AMBIENT_COLOR};\r\n    uniform lowp vec3 ${U_DIFFUSE_COLOR};\r\n    uniform lowp vec3 ${U_SPECULAR_COLOR};\r\n    uniform lowp float ${U_SPECULARITY};\r\n    uniform samplerCube ${U_SAMPLER};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    // Program\r\n    void main(void) {\r\n      highp vec3 n = normalize(${V_NORMAL});\r\n      highp vec3 u = ${U_LIGHT_DIRECTION};\r\n      highp vec3 v = -reflect(u, n);\r\n      highp vec3 w = -reflect(vec3(0, 0, 1), n);\r\n      lowp float Ir = 1.0 - pow(max(0.0, (gl_FrontFacing ? +1.0 : -1.0) * n.z), 32.0); // Reflection intensity\r\n      lowp float Is = v.z < 0.0 ? 0.0 : pow(v.z, ${U_SPECULARITY}); // Specular intensity\r\n      gl_FragColor = Ir * ${U_COLOR} * textureCube(${U_SAMPLER}, w) + Is * vec4(${U_SPECULAR_COLOR}, 1.0);\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, glslVertex, glslFragment);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      normal: gl.getAttribLocation(program, A_NORMAL),\r\n    },\r\n    uniforms: {\r\n      matrices: {\r\n        projection: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n        view: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n        model: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n        normal: getUniformLocation(gl, program, U_NORMAL_MATRIX),\r\n      },\r\n      color: getUniformLocation(gl, program, U_COLOR),\r\n      light: {\r\n        direction: getUniformLocation(gl, program, U_LIGHT_DIRECTION),\r\n        specularColor: getUniformLocation(gl, program, U_SPECULAR_COLOR),\r\n        specularity: getUniformLocation(gl, program, U_SPECULARITY),\r\n      },\r\n      sampler: getUniformLocation(gl, program, U_SAMPLER),\r\n    },\r\n  };\r\n}\r\n\r\nfunction buildProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string) {\r\n  const program = gl.createProgram();\r\n  if (!program) {\r\n    throw new Error('Failed to create program.');\r\n  }\r\n  gl.attachShader(program, buildShader(gl, gl.VERTEX_SHADER, vsSource));\r\n  gl.attachShader(program, buildShader(gl, gl.FRAGMENT_SHADER, fsSource));\r\n  gl.linkProgram(program);\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    const message = `Unable to initialize the shader program: ${gl.getProgramInfoLog(program)}`;\r\n    gl.deleteProgram(program);\r\n    throw new Error(message);\r\n  }\r\n  return program;\r\n}\r\n\r\nfunction buildShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n  const shader = gl.createShader(type);\r\n  if (!shader) {\r\n    throw new Error('Failed to create shader.');\r\n  }\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    const message = `An error occurred compiling the shaders: ${gl.getShaderInfoLog(shader)}`;\r\n    gl.deleteShader(shader);\r\n    throw new Error(message);\r\n  }\r\n  return shader;\r\n}\r\n\r\nfunction getUniformLocation(gl: WebGLRenderingContext, program: WebGLProgram, name: string): WebGLUniformLocation {\r\n  return gl.getUniformLocation(program, name) || error(`No uniform named \"${name}\" was found.`);\r\n}\r\n\r\nfunction error<T>(message: string): T {\r\n  throw new Error(message);\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  console.debug(process.env);\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA')\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.')\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react';\r\nimport ReactDOM, { hydrate, render } from 'react-dom';\r\nimport App from './App';\r\nimport './index.scss';\r\n\r\n// If you want to Pre-render with react-snap\r\n// Step 1: install $ yarn add --dev react-snap\r\n// Step 2: add to package.json run script: \"postbuild\": \"react-snap\"\r\n// Step 3: Add to package.json: \"reactSnap\":{\"inlineCss\":true}\r\n// Step 3: replace to the script below.\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// You need bootstrap? $ yarn add bootstrap\r\n// See: https://create-react-app.dev/docs/adding-bootstrap\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// Single-page application (SPA)\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nconst rootElement = document.getElementById('root');\r\nif (rootElement && rootElement!.hasChildNodes()) {\r\n  hydrate(<App />, rootElement);\r\n\r\n  // Precache - set to 'register' once you Pre-render\r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: http://bit.ly/CRA-PWA\r\n  serviceWorker.register();\r\n} else {\r\n  render(<App />, rootElement);\r\n}\r\n\r\nlet beforeInstallPromptEvent = null;\r\n\r\nwindow.addEventListener('beforeinstallprompt', function (event) {\r\n  beforeInstallPromptEvent = event;\r\n});\r\n\r\nwindow.addEventListener('appinstalled', function (event) {\r\n  beforeInstallPromptEvent = null;\r\n});"],"sourceRoot":""}