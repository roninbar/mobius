{"version":3,"sources":["App.tsx","index.tsx"],"names":["glsl","COLOR","App","useState","torsion","setTorsion","programInfo","useRef","useEffect","gl","canvas","current","getContext","Error","vsSource","fsSource","program","createProgram","attachShader","makeShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","message","getProgramInfoLog","deleteProgram","attribs","position","getAttribLocation","color","uniforms","modelViewMatrix","getUniformLocation","projectionMatrix","buildProgram","useProgram","uniformMatrix4fv","distance","matrix","mat4","create","translate","makeModelViewMatrix","width","height","fovy","near","far","perspective","makeProjectionMatrix","Math","PI","enable","DEPTH_TEST","depthFunc","LEQUAL","clearDepth","clearColor","CULL_FACE","afid","requestAnimationFrame","f","time","cancelAnimationFrame","makeStripBuffers","positions0","positions","colors0","colors","count0","count","positions2","colors2","count2","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","cullFace","BACK","render","FRONT","className","ref","vertexPositionAttrib","vertexColorAttrib","bindBufferToAttribute","drawArrays","TRIANGLE_STRIP","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","enableVertexAttribArray","base","h","i","s","t","tt","nTwists","ct","cos","st","sin","ctt","stt","r1","r2","z1","z2","push","Array","fill","k","length","makeStrip","makeBufferFromArray","positionBuffer","createBuffer","bufferData","Float32Array","STATIC_DRAW","U_MODEL_VIEW_MATRIX","error","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d0d62869.chunk.js","sourcesContent":["/* eslint-disable one-var */\r\n/* eslint-disable no-bitwise */\r\n\r\nimport { mat4 } from 'gl-matrix';\r\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react';\r\nimport './App.scss';\r\n\r\ntype ProgramInfo = {\r\n  program: WebGLProgram;\r\n  attribs: {\r\n    position: number;\r\n    color: number;\r\n  };\r\n  uniforms: {\r\n    modelViewMatrix: WebGLUniformLocation;\r\n    projectionMatrix: WebGLUniformLocation;\r\n  };\r\n};\r\n\r\nconst glsl = ([s]: TemplateStringsArray): string => s;\r\n\r\nconst BLUE = [0, 0, 1];\r\nconst GREEN = [0, 1, 0];\r\nconst YELLOW = [1, 1, 0];\r\nconst RED = [1, 0, 0];\r\n\r\nconst COLOR = [BLUE, GREEN, YELLOW, RED];\r\n\r\nexport default function App() {\r\n\r\n  const [torsion, setTorsion] = useState(0);\r\n\r\n  const programInfo: MutableRefObject<ProgramInfo | null> = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const gl = canvas.current?.getContext('webgl');\r\n\r\n    if (!gl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    programInfo.current = buildProgram(gl);\r\n\r\n    gl.useProgram(programInfo.current.program);\r\n    gl.uniformMatrix4fv(programInfo.current.uniforms.modelViewMatrix, false, makeModelViewMatrix(4));\r\n    gl.uniformMatrix4fv(programInfo.current.uniforms.projectionMatrix, false, makeProjectionMatrix(gl.canvas.width, gl.canvas.height, Math.PI / 5, 0.1, 100));\r\n\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    gl.clearDepth(1);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    gl.enable(gl.CULL_FACE);\r\n\r\n    let afid = requestAnimationFrame(function f(time) {\r\n      setTorsion(time / 4000 * Math.PI);\r\n      afid = requestAnimationFrame(f);\r\n    });\r\n    return () => {\r\n      cancelAnimationFrame(afid);\r\n    };\r\n  }, []);\r\n\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const gl = canvas.current?.getContext('webgl');\r\n\r\n    if (!gl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    if (!programInfo.current) {\r\n      throw new Error('No program!');\r\n    }\r\n\r\n    const { positions: positions0, colors: colors0, count: count0 } = makeStripBuffers(gl, torsion, 0);\r\n    const { positions: positions2, colors: colors2, count: count2 } = makeStripBuffers(gl, torsion, 2);\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    gl.cullFace(gl.BACK);\r\n    render(gl, programInfo.current.program, programInfo.current?.attribs.position, programInfo.current?.attribs.color, count0 / 3, positions0, colors0);\r\n    gl.cullFace(gl.FRONT);\r\n    render(gl, programInfo.current.program, programInfo.current?.attribs.position, programInfo.current?.attribs.color, count2 / 3, positions2, colors2);\r\n\r\n  }, [torsion]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <canvas width=\"480px\" height=\"480px\" ref={canvas} />\r\n        <p>\r\n          M&ouml;bius Clock\r\n        </p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction render(gl: WebGLRenderingContext, program: WebGLProgram, vertexPositionAttrib: number, vertexColorAttrib: number, count: number, positions: WebGLBuffer, colors: WebGLBuffer) {\r\n  bindBufferToAttribute(gl, positions, vertexPositionAttrib);\r\n  bindBufferToAttribute(gl, colors, vertexColorAttrib);\r\n  gl.drawArrays(gl.TRIANGLE_STRIP, 0, count);\r\n}\r\n\r\nfunction bindBufferToAttribute(gl: WebGLRenderingContext, positions: WebGLBuffer, vertexPositionAttrib: number) {\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positions);\r\n  gl.vertexAttribPointer(vertexPositionAttrib, 3, gl.FLOAT, false, 0, 0);\r\n  gl.enableVertexAttribArray(vertexPositionAttrib);\r\n}\r\n\r\nfunction makeStripBuffers(gl: WebGLRenderingContext, torsion: number, base: number) {\r\n  const { positions, colors } = makeStrip(torsion, base);\r\n  return {\r\n    positions: makeBufferFromArray(gl, positions),\r\n    colors: makeBufferFromArray(gl, colors),\r\n    count: positions.length,\r\n  };\r\n}\r\n\r\nfunction makeBufferFromArray(gl: WebGLRenderingContext, positions: number[]) {\r\n  const positionBuffer = gl.createBuffer();\r\n  if (!positionBuffer) {\r\n    throw new Error('Failed to create position buffer.');\r\n  }\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n  return positionBuffer;\r\n}\r\n\r\nfunction makeStrip(torsion: number, base: number) {\r\n  const positions: number[] = [];\r\n  const colors: number[] = [];\r\n  const nTwists = 3;\r\n  const R = 1.0; const h = 0.1;\r\n  for (let i = 0; i < 2; i++) {\r\n    const epsilon = 0.001;\r\n    const step = 1 / 30.0;\r\n    for (let s = 0.0; s < 1.0 + epsilon; s += step) {\r\n      const t = (i + s) * Math.PI;\r\n      const tt = nTwists * 0.5 * t - torsion;\r\n      const ct = Math.cos(t), st = Math.sin(t);\r\n      const ctt = Math.cos(tt), stt = Math.sin(tt);\r\n      const r1 = R - h * ctt;\r\n      const r2 = R + h * ctt;\r\n      const z1 = -h * stt;\r\n      const z2 = +h * stt;\r\n      positions.push(r2 * st, r2 * ct, z2);\r\n      positions.push(r1 * st, r1 * ct, z1);\r\n      const color = new Array(3).fill(0);\r\n      for (let k = 0; k < 3; k++) {\r\n        color[k] = (1 - s) * COLOR[base + i][k] + s * COLOR[(base + i + 1) % COLOR.length][k];\r\n      }\r\n      colors.push(...color, ...color);\r\n    }\r\n  }\r\n  return { positions, colors };\r\n}\r\n\r\nfunction buildProgram(gl: WebGLRenderingContext): ProgramInfo {\r\n  const U_MODEL_VIEW_MATRIX = 'uModelViewMatrix';\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const A_VERTEX_POSITION = 'aVertexPosition';\r\n  const A_VERTEX_COLOR = 'aVertexColor';\r\n\r\n  const vsSource = glsl`\r\n    attribute vec4 aVertexPosition;\r\n    attribute vec4 aVertexColor;\r\n    uniform mat4 uModelViewMatrix;\r\n    uniform mat4 uProjectionMatrix;\r\n    varying lowp vec4 vColor;\r\n    void main(void) {\r\n      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\r\n      vColor = aVertexColor;\r\n    }\r\n  `;\r\n\r\n  const fsSource = glsl`\r\n    varying lowp vec4 vColor;\r\n    void main(void) {\r\n      gl_FragColor = vColor;\r\n    }\r\n  `;\r\n\r\n  const program = gl.createProgram();\r\n\r\n  if (!program) {\r\n    throw new Error('Failed to create program.');\r\n  }\r\n\r\n  gl.attachShader(program, makeShader(gl, gl.VERTEX_SHADER, vsSource));\r\n  gl.attachShader(program, makeShader(gl, gl.FRAGMENT_SHADER, fsSource));\r\n  gl.linkProgram(program);\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    const message = `Unable to initialize the shader program: ${gl.getProgramInfoLog(program)}`;\r\n    gl.deleteProgram(program);\r\n    throw new Error(message);\r\n  }\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_VERTEX_POSITION),\r\n      color: gl.getAttribLocation(program, A_VERTEX_COLOR),\r\n    },\r\n    uniforms: {\r\n      modelViewMatrix: getUniformLocation(gl, program, U_MODEL_VIEW_MATRIX),\r\n      projectionMatrix: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n    },\r\n  };\r\n}\r\n\r\nfunction getUniformLocation(gl: WebGLRenderingContext, program: WebGLProgram, U_MODEL_VIEW_MATRIX: string): WebGLUniformLocation {\r\n  return gl.getUniformLocation(program, U_MODEL_VIEW_MATRIX) || error(`No uniform named \"${U_MODEL_VIEW_MATRIX}\" was found.`);\r\n}\r\n\r\nfunction error<T>(message: string): T {\r\n  throw new Error(message);\r\n}\r\n\r\nfunction makeShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n  const shader = gl.createShader(type);\r\n  if (!shader) {\r\n    throw new Error('Failed to create shader.');\r\n  }\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    const message = `An error occurred compiling the shaders: ${gl.getShaderInfoLog(shader)}`;\r\n    gl.deleteShader(shader);\r\n    throw new Error(message);\r\n  }\r\n  return shader;\r\n}\r\n\r\nfunction makeModelViewMatrix(distance: number) {\r\n  const matrix = mat4.create();\r\n  mat4.translate(matrix, matrix, [0, 0, -distance]);\r\n  return matrix;\r\n}\r\n\r\nfunction makeProjectionMatrix(width: number, height: number, fovy: number, near: number, far: number) {\r\n  const matrix = mat4.create();\r\n  mat4.perspective(matrix, fovy, width / height, near, far);\r\n  return matrix;\r\n}\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.scss'\r\n\r\n// You need bootstrap? $ yarn add bootstrap\r\n// See: https://create-react-app.dev/docs/adding-bootstrap\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// Single-page application (SPA)\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want to Pre-render with react-snap\r\n// Step 1: install $ yarn add --dev react-snap\r\n// Step 2: add to package.json run script: \"postbuild\": \"react-snap\"\r\n// Step 3: Add to package.json: \"reactSnap\":{\"inlineCss\":true}\r\n// Step 3: replace to the script below.\r\n\r\n/*\r\nimport { hydrate, render } from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst rootElement = document.getElementById('root')\r\nif (rootElement && rootElement!.hasChildNodes()) {\r\n  hydrate(<AppRouter />, rootElement)\r\n\r\n  // Precache - set to 'register' once you Pre-render\r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: http://bit.ly/CRA-PWA\r\n  serviceWorker.register()\r\n} else {\r\n  render(<AppRouter />, rootElement)\r\n}\r\n*/\r\n"],"sourceRoot":""}