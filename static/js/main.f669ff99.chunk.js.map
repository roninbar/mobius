{"version":3,"sources":["App.tsx","index.tsx"],"names":["glsl","String","raw","GOLD","SILVER","STRIP_COLORS","H","STEP","Math","PI","App","useState","theta","setTheta","anchor","setAnchor","mat4","create","modelMatrix","setModelMatrix","programWithTextureMapping","useRef","programWithoutTextureMapping","canvas","useEffect","gl","current","getContext","Error","vsSource","fsSource","program","buildProgram","attribs","position","getAttribLocation","color","textureCoords","uniforms","sampler","getUniformLocation","textureMatrix","viewMatrix","projectionMatrix","makeProgramWithTextureMapping","normal","normalMatrix","makeProgramWithoutTextureMapping","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","which","loadTexture","process","TEXTURE10","enable","DEPTH_TEST","depthFunc","LEQUAL","clearDepth","clearColor","CULL_FACE","cullFace","BACK","afid","requestAnimationFrame","f","time","cancelAnimationFrame","texProgram","texAttribs","texUniforms","nonTexProgram","nonTexAttribs","nonTexUniforms","perspective","width","height","fromTranslation","mat3","uniformMatrix4fv","drawWithoutTexture","topology","positionBuffer","normalBuffer","colorBuffer","useProgram","drawArrays","deleteBuffer","drawWithTexture","textureCoordBuffer","undefined","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","FRONT","scale","makeRimBuffers","m","translate","t","uniformMatrix3fv","uniform1i","positions","colors","normals","first","v","x","cos","y","sin","push","mode","TRIANGLE_FAN","count","makeFloatBufferFromArray","makeDiscBuffers","vertexCounts","positionBuffers","colorBuffers","textureCoordBuffers","i","makeStripBuffers","TRIANGLE_STRIP","forEach","buffer","drawHand","length","angle","vertexCount","makeHandBuffers","rotateZ","bindAttribute","FLOAT","unbindAttribute","r","h","norm","sqrt","nr","nh","makeHubcapBuffers","rotateX","z","r0","r1","z0","z1","x0","x1","y0","y1","makeFrisbeeBuffers","className","ref","onPointerDown","currentTarget","pointerId","clientX","clientY","setPointerCapture","onPointerMove","dx","dy","distance","rot","fromRotation","mul","onPointerUp","releasePointerCapture","url","texture","createTexture","activeTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","image","Image","onload","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","isPowerOf2","generateMipmap","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","src","value","torsion","piece","s","tt","nTwists","r2","k","makeStrip","array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","positionAttrib","colorAttrib","normalAttrib","texCoordAttrib","texCoordBuffer","attrib","size","type","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","createProgram","attachShader","buildShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","message","getProgramInfoLog","deleteProgram","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","name","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f669ff99.chunk.js","sourcesContent":["/* eslint-disable one-var */\r\n/* eslint-disable no-bitwise */\r\n\r\nimport { mat3, mat4 } from 'gl-matrix';\r\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react';\r\nimport './App.scss';\r\n\r\ninterface ProgramInfo {\r\n  program: WebGLProgram;\r\n  attribs: {\r\n    color: number;\r\n    position: number;\r\n  };\r\n  uniforms: {\r\n    modelMatrix: WebGLUniformLocation;\r\n    viewMatrix: WebGLUniformLocation;\r\n    projectionMatrix: WebGLUniformLocation;\r\n  };\r\n}\r\n\r\ntype NonTextureMappingProgramInfo = ProgramInfo & {\r\n  attribs: {\r\n    normal: number;\r\n  };\r\n  uniforms: {\r\n    normalMatrix: WebGLUniformLocation;\r\n  };\r\n};\r\n\r\ntype TextureMappingProgramInfo = ProgramInfo & {\r\n  attribs: {\r\n    textureCoords: number;\r\n  };\r\n  uniforms: {\r\n    sampler: WebGLSampler;\r\n    textureMatrix: WebGLUniformLocation;\r\n  };\r\n};\r\n\r\ntype Primitive = {\r\n  mode: number;\r\n  first: number;\r\n  count: number;\r\n};\r\n\r\ninterface Actor {\r\n  topology: Primitive[];\r\n  positionBuffer: WebGLBuffer;\r\n  normalBuffer?: WebGLBuffer;\r\n  colorBuffer: WebGLBuffer;\r\n  textureCoordBuffer?: WebGLBuffer;\r\n}\r\n\r\nconst glsl = String.raw;\r\n\r\n// const BLACK = [0, 0, 0];\r\n// const BLUE = [0, 0, 1];\r\n// const GREEN = [0, 1, 0];\r\n// const YELLOW = [1, 1, 0];\r\n// const RED = [1, 0, 0];\r\nconst GOLD = [1.0, 0.8, 0.5];\r\nconst SILVER = [0.75, 0.75, 0.75];\r\n// const TITANIUM = [0.125, 0.125, 0.125];\r\n// const WHITE = [1, 1, 1];\r\n\r\nconst STRIP_COLORS = [SILVER, SILVER, SILVER, SILVER];\r\n\r\nconst R = 1.0, H = 0.1;\r\nconst STEP = Math.PI / 36;\r\nconst EPSILON = 0.001;\r\n\r\nexport default function App() {\r\n\r\n  const [theta, setTheta] = useState(0); // The angle of the hour hand, in radians.\r\n  const [anchor, setAnchor] = useState<{ x: number, y: number; } | null>();\r\n  const [modelMatrix, setModelMatrix] = useState(mat4.create());\r\n\r\n  const programWithTextureMapping: MutableRefObject<TextureMappingProgramInfo | null> = useRef(null);\r\n  const programWithoutTextureMapping: MutableRefObject<NonTextureMappingProgramInfo | null> = useRef(null);\r\n\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n\r\n  // #region Initialize WebGL stuff and start the animation.\r\n  useEffect(() => {\r\n\r\n    const gl = canvas.current?.getContext('webgl');\r\n\r\n    if (!gl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    programWithTextureMapping.current = makeProgramWithTextureMapping(gl);\r\n    programWithoutTextureMapping.current = makeProgramWithoutTextureMapping(gl);\r\n\r\n    for (const which of [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3]) {\r\n      loadTexture(gl, which, `${process.env.PUBLIC_URL}/texture/hours${which - gl.TEXTURE0}.bmp`);\r\n    }\r\n\r\n    loadTexture(gl, gl.TEXTURE10, `${process.env.PUBLIC_URL}/texture/mobius.png`);\r\n\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    gl.clearDepth(1);\r\n    gl.clearColor(0, 0, 0, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.cullFace(gl.BACK);\r\n\r\n    let afid = requestAnimationFrame(function f(time) {\r\n      setTheta(time / 12000 * Math.PI);\r\n      // const now = new Date();\r\n      // setTheta(((now.getSeconds() / 60 + now.getMinutes()) / 60 + now.getHours()) / 6 * Math.PI);\r\n      afid = requestAnimationFrame(f);\r\n    });\r\n\r\n    return () => {\r\n      cancelAnimationFrame(afid);\r\n    };\r\n\r\n  }, []);\r\n  // #endregion\r\n\r\n  // #region Render one frame.\r\n  useEffect(() => {\r\n\r\n    const gl = canvas.current?.getContext('webgl');\r\n\r\n    if (!gl) {\r\n      throw new Error('Failed to get a WebGL context.');\r\n    }\r\n\r\n    if (!programWithTextureMapping.current || !programWithoutTextureMapping.current) {\r\n      throw new Error('Missing shader program!');\r\n    }\r\n\r\n    const { program: texProgram, attribs: texAttribs, uniforms: texUniforms } = programWithTextureMapping.current;\r\n    const { program: nonTexProgram, attribs: nonTexAttribs, uniforms: nonTexUniforms } = programWithoutTextureMapping.current;\r\n\r\n    const projectionMatrix = mat4.perspective(mat4.create(), Math.PI / 5, gl.canvas.width / gl.canvas.height, 0.1, 100);\r\n    const viewMatrix = mat4.fromTranslation(mat4.create(), [0, 0, -4]);\r\n    const textureMatrix = mat3.create();\r\n\r\n    gl.uniformMatrix4fv(nonTexUniforms.projectionMatrix, false, projectionMatrix);\r\n    gl.uniformMatrix4fv(nonTexUniforms.viewMatrix, false, viewMatrix);\r\n\r\n    const drawWithoutTexture = function ({ topology, positionBuffer, normalBuffer, colorBuffer }: Actor) {\r\n      try {\r\n        gl.useProgram(nonTexProgram);\r\n        drawArrays(gl, topology, nonTexAttribs.position, positionBuffer, nonTexAttribs.color, colorBuffer, nonTexAttribs.normal, normalBuffer);\r\n      } finally {\r\n        if (colorBuffer) gl.deleteBuffer(colorBuffer);\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    const drawWithTexture = function ({ topology, positionBuffer, normalBuffer, colorBuffer, textureCoordBuffer }: Actor) {\r\n      try {\r\n        gl.useProgram(texProgram);\r\n        drawArrays(gl, topology, texAttribs.position, positionBuffer, texAttribs.color, colorBuffer, 0, undefined, texAttribs.textureCoords, textureCoordBuffer);\r\n      } finally {\r\n        if (textureCoordBuffer) gl.deleteBuffer(textureCoordBuffer);\r\n        if (colorBuffer) gl.deleteBuffer(colorBuffer);\r\n        if (normalBuffer) gl.deleteBuffer(normalBuffer);\r\n        if (positionBuffer) gl.deleteBuffer(positionBuffer);\r\n      }\r\n    };\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    gl.cullFace(gl.FRONT);\r\n\r\n    // #region Inside of Rim\r\n    gl.uniformMatrix4fv(nonTexUniforms.modelMatrix, false, mat4.scale(mat4.create(), modelMatrix, [1.2, 1.2, 1]));\r\n    gl.uniformMatrix4fv(nonTexUniforms.normalMatrix, false, mat4.scale(mat4.create(), modelMatrix, [1 / 1.2, 1 / 1.2, 1]));\r\n    drawWithoutTexture(makeRimBuffers(gl));\r\n    // #endregion\r\n\r\n    gl.cullFace(gl.BACK);\r\n\r\n    // #region Clock Face\r\n    {\r\n      gl.useProgram(texProgram);\r\n      const m = mat4.translate(mat4.create(), modelMatrix, [0, 0, -H]);\r\n      gl.uniformMatrix4fv(texUniforms.modelMatrix, false, mat4.scale(mat4.create(), m, [1.199, 1.199, 1]));\r\n      const t = mat3.scale(mat3.create(), mat3.translate(mat3.create(), textureMatrix, [0.5, 0.5]), [0.75, -0.75]);\r\n      // gl.uniformMatrix4fv(texUniforms.normalMatrix, false, mat4.scale(mat4.create(), m, [1 / 1.2, 1 / 1.2, 1]));\r\n      gl.uniformMatrix3fv(texUniforms.textureMatrix, false, t);\r\n      gl.uniform1i(texUniforms.sampler, 10);\r\n      drawWithTexture(makeDiscBuffers(gl));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Hours Strip\r\n    const vertexCounts: number[] = [];\r\n    const positionBuffers: WebGLBuffer[] = [];\r\n    const colorBuffers: WebGLBuffer[] = [];\r\n    const textureCoordBuffers: (WebGLBuffer | undefined)[] = [];\r\n\r\n    for (let i = 0; i < 4; i++) (\r\n      {\r\n        topology: [{ count: vertexCounts[i] }],\r\n        positionBuffer: positionBuffers[i],\r\n        colorBuffer: colorBuffers[i],\r\n        textureCoordBuffer: textureCoordBuffers[i],\r\n      } = makeStripBuffers(gl, theta, i)\r\n    );\r\n\r\n    try {\r\n      gl.useProgram(texProgram);\r\n      gl.uniformMatrix4fv(texUniforms.projectionMatrix, false, projectionMatrix);\r\n      gl.uniformMatrix4fv(texUniforms.viewMatrix, false, viewMatrix);\r\n      gl.uniformMatrix4fv(texUniforms.modelMatrix, false, modelMatrix);\r\n      gl.uniformMatrix3fv(texUniforms.textureMatrix, false, textureMatrix);\r\n      for (let i = 0; i < 4; i++) {\r\n        gl.uniform1i(texUniforms.sampler, i);\r\n        drawWithTexture({\r\n          topology: [{ mode: gl.TRIANGLE_STRIP, first: 0, count: vertexCounts[i] }],\r\n          positionBuffer: positionBuffers[i],\r\n          colorBuffer: colorBuffers[i],\r\n          textureCoordBuffer: textureCoordBuffers[i],\r\n        });\r\n      }\r\n    } finally {\r\n      [...positionBuffers, ...colorBuffers, ...textureCoordBuffers].forEach((buffer) => buffer && gl.deleteBuffer(buffer));\r\n    }\r\n    // #endregion\r\n\r\n    // #region Hands\r\n    const drawHand = function (height: number, width: number, length: number, angle: number) {\r\n      const { vertexCount, positions, normals, colors } = makeHandBuffers(gl, height, width, length);\r\n      try {\r\n        gl.useProgram(nonTexProgram);\r\n        const m = mat4.rotateZ(mat4.create(), modelMatrix, -angle);\r\n        gl.uniformMatrix4fv(nonTexUniforms.modelMatrix, false, m);\r\n        gl.uniformMatrix4fv(nonTexUniforms.normalMatrix, false, m);\r\n        bindAttribute(gl, nonTexAttribs.position, positions, 3, gl.FLOAT);\r\n        bindAttribute(gl, nonTexAttribs.normal, normals, 3, gl.FLOAT);\r\n        bindAttribute(gl, nonTexAttribs.color, colors, 3, gl.FLOAT);\r\n        try {\r\n          gl.drawArrays(gl.TRIANGLE_STRIP, 0, vertexCount);\r\n        } finally {\r\n          unbindAttribute(gl, nonTexAttribs.color);\r\n          unbindAttribute(gl, nonTexAttribs.normal);\r\n          unbindAttribute(gl, nonTexAttribs.position);\r\n        }\r\n      } finally {\r\n        gl.deleteBuffer(colors);\r\n        gl.deleteBuffer(normals);\r\n        gl.deleteBuffer(positions);\r\n      }\r\n    };\r\n\r\n    drawHand(0.01, 0.02, 0.6, theta); // Hours\r\n    drawHand(0.02, 0.02, 0.8, 12 * theta); // Minutes\r\n    // #endregion\r\n\r\n    // #region Hubcap\r\n    const { vertexCount, positions, normals, colors } = makeHubcapBuffers(gl, 0.03);\r\n    try {\r\n      gl.useProgram(nonTexProgram);\r\n      gl.uniformMatrix4fv(nonTexUniforms.modelMatrix, false, modelMatrix);\r\n      gl.uniformMatrix4fv(nonTexUniforms.normalMatrix, false, modelMatrix);\r\n      bindAttribute(gl, nonTexAttribs.position, positions, 3, gl.FLOAT);\r\n      bindAttribute(gl, nonTexAttribs.normal, normals, 3, gl.FLOAT);\r\n      bindAttribute(gl, nonTexAttribs.color, colors, 3, gl.FLOAT);\r\n      try {\r\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, vertexCount);\r\n      } finally {\r\n        unbindAttribute(gl, nonTexAttribs.position);\r\n        unbindAttribute(gl, nonTexAttribs.color);\r\n      }\r\n    } finally {\r\n      gl.deleteBuffer(colors);\r\n      gl.deleteBuffer(positions);\r\n    }\r\n    // #endregion\r\n\r\n    // #region Back of Case\r\n    const m = mat4.rotateX(mat4.create(), mat4.translate(mat4.create(), modelMatrix, [0, 0, -H]), Math.PI);\r\n    gl.uniformMatrix4fv(nonTexUniforms.modelMatrix, false, mat4.scale(mat4.create(), m, [1.2, 1.2, 0.24]));\r\n    gl.uniformMatrix4fv(nonTexUniforms.normalMatrix, false, mat4.scale(mat4.create(), m, [1 / 1.2, 1 / 1.2, 1 / 0.24]));\r\n    drawWithoutTexture(makeFrisbeeBuffers(gl));\r\n    gl.uniformMatrix4fv(nonTexUniforms.modelMatrix, false, mat4.scale(mat4.create(), modelMatrix, [1.2, 1.2, 1]));\r\n    gl.uniformMatrix4fv(nonTexUniforms.normalMatrix, false, mat4.scale(mat4.create(), modelMatrix, [1 / 1.2, 1 / 1.2, 1]));\r\n    drawWithoutTexture(makeRimBuffers(gl));\r\n    // #endregion\r\n\r\n  }, [theta, modelMatrix]);\r\n  // #endregion\r\n\r\n  // #region Event Handlers \r\n  const onPointerDown = ({ currentTarget, pointerId, clientX: x, clientY: y }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    currentTarget.setPointerCapture(pointerId);\r\n    setAnchor({ x, y });\r\n  };\r\n\r\n  const onPointerUp = ({ currentTarget, pointerId }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    setAnchor(null);\r\n    currentTarget.releasePointerCapture(pointerId);\r\n  };\r\n\r\n  const onPointerMove = ({ clientX: x, clientY: y }: React.PointerEvent<HTMLCanvasElement>): void => {\r\n    if (anchor) {\r\n      const dx = x - anchor.x;\r\n      const dy = y - anchor.y;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n      if (distance > 0) {\r\n        const rot = mat4.fromRotation(mat4.create(), 0.01 * distance, [dy, dx, 0]);\r\n        setModelMatrix(mat4.mul(mat4.create(), rot, modelMatrix));\r\n        setAnchor({ x, y });\r\n      }\r\n    }\r\n  };\r\n  // #endregion\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <canvas\r\n          width=\"768px\"\r\n          height=\"768px\"\r\n          ref={canvas}\r\n          onPointerDown={onPointerDown}\r\n          onPointerMove={onPointerMove}\r\n          onPointerUp={onPointerUp}\r\n        />\r\n        <p>M&ouml;bius Clock</p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction loadTexture(gl: WebGLRenderingContext, which: number, url: string) {\r\n  const texture = gl.createTexture();\r\n\r\n  // Because images have to be downloaded over the internet\r\n  // they might take a moment until they are ready.\r\n  // Until then put a single pixel in the texture so we can\r\n  // use it immediately. When the image has finished downloading\r\n  // we'll update the texture with the contents of the image.\r\n  gl.activeTexture(which);\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    0, // level\r\n    gl.RGBA,\r\n    1, // width\r\n    1, // height\r\n    0, // border\r\n    gl.RGBA,\r\n    gl.UNSIGNED_BYTE,\r\n    new Uint8Array([255, 255, 255, 255]), // opaque white\r\n  );\r\n\r\n  const image = new Image();\r\n  image.onload = () => {\r\n    gl.activeTexture(which);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\r\n    // WebGL1 has different requirements for power of 2 images\r\n    // vs non power of 2 images so check if the image is a\r\n    // power of 2 in both dimensions.\r\n    if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\r\n      // Yes, it's a power of 2. Generate mips.\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n    } else {\r\n      // No, it's not a power of 2. Turn off mips and set\r\n      // wrapping to clamp to edge.\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    }\r\n  };\r\n  image.src = url;\r\n\r\n  return texture;\r\n}\r\n\r\nfunction isPowerOf2(value: number) {\r\n  return (value & (value - 1)) === 0;\r\n}\r\n\r\nfunction makeFrisbeeBuffers(gl: WebGLRenderingContext): Actor {\r\n  const topology: Primitive[] = [];\r\n  const positions = [0, 0, R];\r\n  const normals = [0, 0, 1];\r\n  const colors = [...GOLD];\r\n\r\n  let first = 0, v = 1;\r\n\r\n  const r = R * Math.sin(STEP);\r\n  const z = R * Math.cos(STEP);\r\n\r\n  for (let f = -Math.PI; f < Math.PI + EPSILON; f += STEP, v++) {\r\n    const x = r * Math.cos(f), y = r * Math.sin(f);\r\n\r\n    positions.push(x, y, z);\r\n    normals.push(x, y, z);\r\n    colors.push(...GOLD);\r\n  }\r\n\r\n  topology.push({ mode: gl.TRIANGLE_FAN, first, count: v - first });\r\n  first = v;\r\n\r\n  for (let t = STEP; t < 0.5 * Math.PI - EPSILON; t += STEP) {\r\n    const r0 = R * Math.sin(t), r1 = R * Math.sin(t + STEP);\r\n    const z0 = R * Math.cos(t), z1 = R * Math.cos(t + STEP);\r\n\r\n    for (let f = -Math.PI; f < Math.PI + EPSILON; f += STEP, v += 2) {\r\n      const x0 = r0 * Math.cos(f), x1 = r1 * Math.cos(f);\r\n      const y0 = r0 * Math.sin(f), y1 = r1 * Math.sin(f);\r\n\r\n      positions.push(x0, y0, z0);\r\n      normals.push(x0, y0, z0);\r\n      colors.push(...GOLD);\r\n\r\n      positions.push(x1, y1, z1);\r\n      normals.push(x1, y1, z1);\r\n      colors.push(...GOLD);\r\n    }\r\n\r\n    topology.push({ mode: gl.TRIANGLE_STRIP, first, count: v - first });\r\n    first = v;\r\n  }\r\n\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeRimBuffers(gl: WebGLRenderingContext) {\r\n  const topology: Primitive[] = [];\r\n  const positions = [];\r\n  const normals = [];\r\n  const colors = [];\r\n  for (let t = 0; t < 2 * Math.PI + EPSILON; t += STEP) {\r\n    positions.push(R * Math.cos(t), R * Math.sin(t), +H);\r\n    normals.push(Math.cos(t), Math.sin(t), 0);\r\n    colors.push(...GOLD);\r\n    positions.push(R * Math.cos(t), R * Math.sin(t), -H);\r\n    normals.push(Math.cos(t), Math.sin(t), 0);\r\n    colors.push(...GOLD);\r\n  }\r\n  topology.push({ mode: gl.TRIANGLE_STRIP, first: 0, count: positions.length / 3 });\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeDiscBuffers(gl: WebGLRenderingContext) {\r\n  const topology: Primitive[] = [];\r\n  const positions = [0, 0, 0];\r\n  const colors = [...SILVER];\r\n  const normals = [0, 0, 1];\r\n  const textureCoords = [0, 0];\r\n\r\n  let first = 0, v = 1;\r\n  for (let t = 0; t < 2 * Math.PI + EPSILON; t += STEP, v++) {\r\n    const x = R * Math.cos(t);\r\n    const y = R * Math.sin(t);\r\n    positions.push(x, y, 0);\r\n    normals.push(0, 0, 1);\r\n    colors.push(...SILVER);\r\n    textureCoords.push(x / R, y / R);\r\n  }\r\n  topology.push({ mode: gl.TRIANGLE_FAN, first, count: v - first });\r\n  first = v;\r\n\r\n  return {\r\n    topology,\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    normalBuffer: makeFloatBufferFromArray(gl, normals),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n    textureCoordBuffer: makeFloatBufferFromArray(gl, textureCoords),\r\n  };\r\n}\r\n\r\nfunction makeHubcapBuffers(gl: WebGLRenderingContext, height: number) {\r\n  const r = 0.05;\r\n  const h = 0.01;\r\n  const norm = Math.sqrt(r * r + h * h);\r\n  const nr = r / norm;\r\n  const nh = h / norm;\r\n  const positions = [0, 0, height + h];\r\n  const normals = [0, 0, 1];\r\n  const colors = [...SILVER];\r\n  for (let t = 0; t < 2 * Math.PI; t += Math.PI / 30) {\r\n    positions.push(r * Math.cos(t), r * Math.sin(t), height);\r\n    normals.push(nh * Math.cos(t), nh * Math.sin(t), nr);\r\n    colors.push(...SILVER);\r\n  }\r\n  const vertexCount = positions.length / 3;\r\n  return {\r\n    vertexCount,\r\n    positions: makeFloatBufferFromArray(gl, positions),\r\n    normals: makeFloatBufferFromArray(gl, normals),\r\n    colors: makeFloatBufferFromArray(gl, colors),\r\n  };\r\n}\r\n\r\nfunction makeHandBuffers(gl: WebGLRenderingContext, height: number, width: number, length: number) {\r\n  return {\r\n    vertexCount: 4,\r\n    positions: makeFloatBufferFromArray(gl, [\r\n      -width, -0.2 * length, height,\r\n      +width, -0.2 * length, height,\r\n      -width, length, height,\r\n      +width, length, height,\r\n    ]),\r\n    normals: makeFloatBufferFromArray(gl, [\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n      0, 0, 1,\r\n    ]),\r\n    colors: makeFloatBufferFromArray(gl, [\r\n      ...SILVER,\r\n      ...SILVER,\r\n      ...SILVER,\r\n      ...SILVER,\r\n    ]),\r\n  };\r\n}\r\n\r\nfunction makeStripBuffers(gl: WebGLRenderingContext, torsion: number, piece: number): Actor {\r\n  const { positions, colors, textureCoords } = makeStrip(torsion, piece);\r\n  return {\r\n    topology: [{ mode: gl.TRIANGLE_STRIP, first: 0, count: positions.length / 3 }],\r\n    positionBuffer: makeFloatBufferFromArray(gl, positions),\r\n    colorBuffer: makeFloatBufferFromArray(gl, colors),\r\n    textureCoordBuffer: makeFloatBufferFromArray(gl, textureCoords),\r\n  };\r\n}\r\n\r\nfunction makeStrip(theta: number, piece: number) {\r\n  const textureCoords: number[] = [];\r\n  const positions: number[] = [];\r\n  const colors: number[] = [];\r\n  const nTwists = 3;\r\n  for (let s = 0.0; s < 1.001; s += 0.033333) {\r\n    const t = (piece + s) * Math.PI;\r\n    const tt = nTwists * 0.5 * (t - theta);\r\n    // Position\r\n    const r1 = R + H * Math.cos(tt);\r\n    const r2 = R - H * Math.cos(tt);\r\n    positions.push(r1 * Math.sin(t), r1 * Math.cos(t), -H * Math.sin(tt));\r\n    positions.push(r2 * Math.sin(t), r2 * Math.cos(t), +H * Math.sin(tt));\r\n    // Color\r\n    const color = [0, 0, 0];\r\n    for (let k = 0; k < 3; k++) {\r\n      color[k] = (1 - s) * STRIP_COLORS[piece][k] + s * STRIP_COLORS[(piece + 1) % STRIP_COLORS.length][k];\r\n    }\r\n    colors.push(...color, ...color);\r\n    // Texture Coordinates\r\n    textureCoords.push(s, 0, s, 1);\r\n  }\r\n  return { positions, colors, textureCoords };\r\n}\r\n\r\nfunction makeFloatBufferFromArray(gl: WebGLRenderingContext, array: number[]) {\r\n  const buffer = gl.createBuffer();\r\n  if (!buffer) {\r\n    throw new Error('Failed to create buffer.');\r\n  }\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(array), gl.STATIC_DRAW);\r\n  return buffer;\r\n}\r\n\r\nfunction drawArrays(\r\n  gl: WebGLRenderingContext,\r\n  topology: Primitive[],\r\n  positionAttrib: number,\r\n  positionBuffer: WebGLBuffer,\r\n  colorAttrib: number,\r\n  colorBuffer: WebGLBuffer,\r\n  normalAttrib?: number,\r\n  normalBuffer?: WebGLBuffer,\r\n  texCoordAttrib?: number,\r\n  texCoordBuffer?: WebGLBuffer,\r\n) {\r\n  bindAttribute(gl, positionAttrib, positionBuffer, 3, gl.FLOAT);\r\n  bindAttribute(gl, colorAttrib, colorBuffer, 3, gl.FLOAT);\r\n  if (normalBuffer && typeof normalAttrib === 'number') {\r\n    bindAttribute(gl, normalAttrib, normalBuffer, 3, gl.FLOAT);\r\n  }\r\n  if (texCoordBuffer && typeof texCoordAttrib === 'number') {\r\n    bindAttribute(gl, texCoordAttrib, texCoordBuffer, 2, gl.FLOAT);\r\n  }\r\n  try {\r\n    for (const { mode, first, count } of topology) {\r\n      gl.drawArrays(mode, first, count);\r\n    }\r\n  } finally {\r\n    if (texCoordBuffer && typeof texCoordAttrib === 'number') {\r\n      unbindAttribute(gl, texCoordAttrib);\r\n    }\r\n    if (normalBuffer && typeof normalAttrib === 'number') {\r\n      unbindAttribute(gl, normalAttrib);\r\n    }\r\n    unbindAttribute(gl, colorAttrib);\r\n    unbindAttribute(gl, positionAttrib);\r\n  }\r\n}\r\n\r\nfunction bindAttribute(gl: WebGLRenderingContext, attrib: number, buffer: WebGLBuffer, size: number, type: number) {\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.vertexAttribPointer(attrib, size, type, false, 0, 0);\r\n  gl.enableVertexAttribArray(attrib);\r\n}\r\n\r\nfunction unbindAttribute(gl: WebGLRenderingContext, attrib: number) {\r\n  gl.disableVertexAttribArray(attrib);\r\n}\r\n\r\nfunction makeProgramWithoutTextureMapping(gl: WebGLRenderingContext) {\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_NORMAL_MATRIX = 'uNormalMatrix';\r\n  const A_POSITION = 'aPosition';\r\n  const A_NORMAL = 'aNormal';\r\n  const A_COLOR = 'aColor';\r\n  const V_COLOR = 'vColor';\r\n  const V_NORMAL = 'vNormal';\r\n\r\n  const vsSource = glsl`\r\n    // Uniforms\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat4 ${U_NORMAL_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec3 ${A_NORMAL};\r\n    attribute vec4 ${A_COLOR};\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    varying lowp vec4 ${V_COLOR};\r\n    // Program\r\n    void main(void) {\r\n      ${V_NORMAL} = normalize(${U_VIEW_MATRIX} * ${U_NORMAL_MATRIX} * vec4(${A_NORMAL}, 0)).xyz;\r\n      ${V_COLOR} = ${A_COLOR};\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n    }\r\n  `;\r\n\r\n  const fsSource = glsl`\r\n    // Varyings\r\n    varying highp vec3 ${V_NORMAL};\r\n    varying lowp vec4 ${V_COLOR};\r\n    // Program\r\n    void main(void) {\r\n      // Apply lighting\r\n      lowp vec3 Ca = vec3(0.3, 0.3, 0.3); // Ambient light color\r\n      lowp vec3 Cd = vec3(1, 1, 1); // Diffuse light color (white)\r\n      lowp vec3 Cs = vec3(0, 1, 0); // Specular light color (green)\r\n      highp vec3 u = normalize(vec3(0.85, 0.8, 0.75)); // Light direction\r\n      highp vec3 v = 2.0 * dot(u, ${V_NORMAL}) * ${V_NORMAL} - u; // Reflection direction\r\n      lowp float Id = max(0.0, (gl_FrontFacing ? +1.0 : -1.0) * dot(u, ${V_NORMAL})); // Diffuse intensity\r\n      lowp float Is = v[2] < 0.0 ? 0.0 : pow(v[2], 8.0); // Specular intensity\r\n      lowp vec4 C = vec4(Ca + Id * Cd + Is * Cs, 1.0); // Total incident light color\r\n      gl_FragColor = ${V_COLOR} * C;\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, vsSource, fsSource);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      normal: gl.getAttribLocation(program, A_NORMAL),\r\n      color: gl.getAttribLocation(program, A_COLOR),\r\n    },\r\n    uniforms: {\r\n      normalMatrix: getUniformLocation(gl, program, U_NORMAL_MATRIX),\r\n      modelMatrix: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n      viewMatrix: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n      projectionMatrix: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n    },\r\n  };\r\n}\r\n\r\nfunction makeProgramWithTextureMapping(gl: WebGLRenderingContext) {\r\n  const U_PROJECTION_MATRIX = 'uProjectionMatrix';\r\n  const U_VIEW_MATRIX = 'uViewMatrix';\r\n  const U_MODEL_MATRIX = 'uModelMatrix';\r\n  const U_TEXTURE_MATRIX = 'uTextureMatrix';\r\n  const U_SAMPLER = 'uSampler';\r\n  const A_POSITION = 'aPosition';\r\n  const A_COLOR = 'aColor';\r\n  const A_TEXTURE_COORDS = 'aTextureCoords';\r\n  const V_COLOR = 'vColor';\r\n  const V_TEXTURE_COORDS = 'vTextureCoords';\r\n\r\n  const vsSource = glsl`\r\n    // Attributes\r\n    attribute vec4 ${A_POSITION};\r\n    attribute vec4 ${A_COLOR};\r\n    attribute vec2 ${A_TEXTURE_COORDS};\r\n    // Uniforms\r\n    uniform mat4 ${U_PROJECTION_MATRIX};\r\n    uniform mat4 ${U_VIEW_MATRIX};\r\n    uniform mat4 ${U_MODEL_MATRIX};\r\n    uniform mat3 ${U_TEXTURE_MATRIX};\r\n    // Varyings\r\n    varying lowp vec4 ${V_COLOR};\r\n    varying highp vec3 ${V_TEXTURE_COORDS};\r\n    // Program\r\n    void main(void) {\r\n      gl_Position = ${U_PROJECTION_MATRIX} * ${U_VIEW_MATRIX} * ${U_MODEL_MATRIX} * ${A_POSITION};\r\n      ${V_COLOR} = ${A_COLOR};\r\n      ${V_TEXTURE_COORDS} = ${U_TEXTURE_MATRIX} * vec3(${A_TEXTURE_COORDS}, 1);\r\n    }\r\n  `;\r\n\r\n  const fsSource = glsl`\r\n    // Varyings\r\n    varying lowp vec4 ${V_COLOR};\r\n    varying highp vec3 ${V_TEXTURE_COORDS};\r\n    // Uniforms\r\n    uniform sampler2D ${U_SAMPLER};\r\n    // Program\r\n    void main(void) {\r\n      gl_FragColor = ${V_COLOR} * texture2D(${U_SAMPLER}, ${V_TEXTURE_COORDS}.xy);\r\n    }\r\n  `;\r\n\r\n  const program = buildProgram(gl, vsSource, fsSource);\r\n\r\n  return {\r\n    program,\r\n    attribs: {\r\n      position: gl.getAttribLocation(program, A_POSITION),\r\n      color: gl.getAttribLocation(program, A_COLOR),\r\n      textureCoords: gl.getAttribLocation(program, A_TEXTURE_COORDS),\r\n    },\r\n    uniforms: {\r\n      sampler: getUniformLocation(gl, program, U_SAMPLER),\r\n      textureMatrix: getUniformLocation(gl, program, U_TEXTURE_MATRIX),\r\n      modelMatrix: getUniformLocation(gl, program, U_MODEL_MATRIX),\r\n      viewMatrix: getUniformLocation(gl, program, U_VIEW_MATRIX),\r\n      projectionMatrix: getUniformLocation(gl, program, U_PROJECTION_MATRIX),\r\n    },\r\n  };\r\n}\r\n\r\nfunction buildProgram(gl: WebGLRenderingContext, vsSource: string, fsSource: string) {\r\n  const program = gl.createProgram();\r\n\r\n  if (!program) {\r\n    throw new Error('Failed to create program.');\r\n  }\r\n\r\n  gl.attachShader(program, buildShader(gl, gl.VERTEX_SHADER, vsSource));\r\n  gl.attachShader(program, buildShader(gl, gl.FRAGMENT_SHADER, fsSource));\r\n  gl.linkProgram(program);\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    const message = `Unable to initialize the shader program: ${gl.getProgramInfoLog(program)}`;\r\n    gl.deleteProgram(program);\r\n    throw new Error(message);\r\n  }\r\n\r\n  return program;\r\n}\r\n\r\nfunction buildShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n  const shader = gl.createShader(type);\r\n  if (!shader) {\r\n    throw new Error('Failed to create shader.');\r\n  }\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    const message = `An error occurred compiling the shaders: ${gl.getShaderInfoLog(shader)}`;\r\n    gl.deleteShader(shader);\r\n    throw new Error(message);\r\n  }\r\n  return shader;\r\n}\r\n\r\nfunction getUniformLocation(gl: WebGLRenderingContext, program: WebGLProgram, name: string): WebGLUniformLocation {\r\n  return gl.getUniformLocation(program, name) || error(`No uniform named \"${name}\" was found.`);\r\n}\r\n\r\nfunction error<T>(message: string): T {\r\n  throw new Error(message);\r\n}\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.scss'\r\n\r\n// You need bootstrap? $ yarn add bootstrap\r\n// See: https://create-react-app.dev/docs/adding-bootstrap\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// Single-page application (SPA)\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want to Pre-render with react-snap\r\n// Step 1: install $ yarn add --dev react-snap\r\n// Step 2: add to package.json run script: \"postbuild\": \"react-snap\"\r\n// Step 3: Add to package.json: \"reactSnap\":{\"inlineCss\":true}\r\n// Step 3: replace to the script below.\r\n\r\n/*\r\nimport { hydrate, render } from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst rootElement = document.getElementById('root')\r\nif (rootElement && rootElement!.hasChildNodes()) {\r\n  hydrate(<AppRouter />, rootElement)\r\n\r\n  // Precache - set to 'register' once you Pre-render\r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: http://bit.ly/CRA-PWA\r\n  serviceWorker.register()\r\n} else {\r\n  render(<AppRouter />, rootElement)\r\n}\r\n*/\r\n"],"sourceRoot":""}